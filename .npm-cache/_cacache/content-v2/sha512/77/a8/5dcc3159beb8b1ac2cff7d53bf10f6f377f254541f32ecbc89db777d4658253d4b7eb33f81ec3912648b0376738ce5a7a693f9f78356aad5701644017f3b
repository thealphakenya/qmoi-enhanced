{"_id":"spawn-error-forwarder","_rev":"4-085a4899b26ffdec7cac617fec60e464","name":"spawn-error-forwarder","description":"Emit errors on stdout stream for a spawned child process","dist-tags":{"latest":"1.0.0"},"versions":{"1.0.0":{"name":"spawn-error-forwarder","version":"1.0.0","description":"Emit errors on stdout stream for a spawned child process","main":"./src","directories":{"test":"test"},"scripts":{"test":"mocha"},"repository":{"type":"git","url":"https://github.com/bendrucker/spawn-error-forwarder.git"},"keywords":["child_processs","spawn","error","stdout","stderr"],"author":{"name":"Ben Drucker","email":"bvdrucker@gmail.com","url":"http://bendrucker.me"},"license":"MIT","bugs":{"url":"https://github.com/bendrucker/spawn-error-forwarder/issues"},"homepage":"https://github.com/bendrucker/spawn-error-forwarder","devDependencies":{"chai":"~1.10.0"},"gitHead":"db7cdc7123497ad0ca20590efe50f38d16c75191","_id":"spawn-error-forwarder@1.0.0","_shasum":"1afd94738e999b0346d7b9fc373be55e07577029","_from":".","_npmVersion":"2.1.7","_nodeVersion":"0.10.33","_npmUser":{"name":"bendrucker","email":"bvdrucker@gmail.com"},"maintainers":[{"name":"bendrucker","email":"bvdrucker@gmail.com"}],"dist":{"shasum":"1afd94738e999b0346d7b9fc373be55e07577029","tarball":"https://registry.npmjs.org/spawn-error-forwarder/-/spawn-error-forwarder-1.0.0.tgz","integrity":"sha512-gRjMgK5uFjbCvdibeGJuy3I5OYz6VLoVdsOJdA6wV0WlfQVLFueoqMxwwYD9RODdgb6oUIvlRlsyFSiQkMKu0g==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDVhMLsih37ZgOBX642LwoknWdBKEZQGTGfQvhFTBUtRAIhAK1WpnTL0ie18892G7LvhWc1SL5mE71UTmBZ4OSJhKju"}]}}},"readme":"spawn-error-forwarder [![Build Status](https://travis-ci.org/bendrucker/spawn-error-forwarder.svg?branch=master)](https://travis-ci.org/bendrucker/spawn-error-forwarder)\n=====================\n\nEmit errors on stdout stream for a spawned child process. Useful for capturing errors from a spawned process when you want the output from stdout. \n\n## Setup\n```bash\n$ npm install spawn-error-forwarder\n```\n\n## API\n\n#### `fwd(child [, errFactory]` -> `child`\n\nBuffers `child.stderr` output. If the spawned process exits with a code `> 0`, the buffered output of `child.stderr` is used to generate an error which is emitted on `child.stdout`. By default, the error message is the output of `child.stderr`. If you provide an `errFactory` function, it will be called with `code, stderr` where `code` is the child's exit code and `stderr` is string that contains the output of `child.stderr`. `errFactory` should return an `Error` to be emitted on `child.stdout`. \n\n## Example\n\n```js\nvar fwd   = require('spawn-error-forwarder');\nvar spawn = require('child_process').spawn;\nvar child = spawn('git', ['log', 'non-existent-path']);\n\nfwd(child, function (code, stderr) {\n  return new Error('git log exited with ' + code + ':\\n\\n' + stderr);\n});\n\nchild.stdout\n  .on('error', console.error.bind(console))\n  .pipe(process.stdout);\n```\n\nWe want to pipe the output of `git log` to `process.stdout` but since we're providing a path that doesn't exist git will exit with a non-zero code and we'll log its output with `console.error`. \n","maintainers":[{"name":"bendrucker","email":"bvdrucker@gmail.com"}],"time":{"modified":"2022-06-26T22:38:14.949Z","created":"2014-11-23T20:19:26.090Z","1.0.0":"2014-11-23T20:19:26.090Z"},"homepage":"https://github.com/bendrucker/spawn-error-forwarder","keywords":["child_processs","spawn","error","stdout","stderr"],"repository":{"type":"git","url":"https://github.com/bendrucker/spawn-error-forwarder.git"},"author":{"name":"Ben Drucker","email":"bvdrucker@gmail.com","url":"http://bendrucker.me"},"bugs":{"url":"https://github.com/bendrucker/spawn-error-forwarder/issues"},"license":"MIT","readmeFilename":"README.md"}