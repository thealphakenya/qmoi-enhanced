{"_id":"signale","_rev":"15-16915affa126a1ad8e2bdaa7ee12942d","name":"signale","dist-tags":{"latest":"1.4.0"},"versions":{"0.0.0":{"name":"signale","version":"0.0.0","author":{"url":"https://klauscfhq.github.io","name":"Klaus Sinani","email":"klauscfhq@protonmail.com"},"license":"MIT","_id":"signale@0.0.0","maintainers":[{"name":"klauscfhq","email":"klauscfhq@protonmail.com"}],"homepage":"https://github.com/klauscfhq/signale#readme","bugs":{"url":"https://github.com/klauscfhq/signale/issues"},"xo":{"space":2},"dist":{"shasum":"6eb159cf519690bb5efb98474bb6801b1449db92","tarball":"https://registry.npmjs.org/signale/-/signale-0.0.0.tgz","fileCount":10,"integrity":"sha512-T1yZBFzjzVZNzg7rit4VYL/ZbErKK9DreSoV8F7WjrlQr6vGSioIGODfYoLp2yhoxBCju51wVmvUpWn4bxfejg==","signatures":[{"sig":"MEQCIBOsUDdaomYgayq/0dfygf8gxhbARTicGbupds8VocxfAiBWx4ouCTM4zrMyGhZV6IcPHViapHyfIwPDGOouUNgpzQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":10456,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa8M7BCRA9TVsSAnZWagAA3ugP/0GyiCMjZK18h5Ok8EbS\n+HHfdJnvpsVL8Eay4II+LSfPLdlc/KnIm+Aae2B0xiqdVGbRCDb3C1a6r3Pj\n1dlGwcSd0qmYW733zWw9NUGLFIO28I/DKb07Ia2Et8dsd9yEIZ7KsEwxKDuN\nzHu9lPL0bRCp3khzoBGh+eEiDH6Ov52iKflgt4QgEii8idlE0H9LFG677Tya\nXj2ss3tf/zfs0xWiHpXR2P1zTaSDo9McI2t/1Rss84N/uNxrS4tvmyZQIwmQ\nN/yaT/PWEuYVPoIIH7/NFhfqUUMLTWYt4WnV6lJVW44ya8LCtXOd8I3LG0a+\n5oI1spb7opUeTuJ5z2RSIXCDyaik4oTq9RsQR0IUuSuH4UGfYbjJFs4YFbDN\nIUJYUugO/8AAMz+/hreejA2pQFyWuppDWxsGBLPagNApmkwZCwHE/8EN3zYd\n9hs+4iAuepQXdVKJI8zvqgieizH8yaKAlgdYMIcZYngF7uyTJK2kBxEf0a0e\nhOUH/mGUeAfPh58WPTq8QL6nRpFORsb72QWZHDEPvb7gVepiTpgaVcEm9Wae\nj90fVdqk3uDFQgm4KO6hjnRxC5TfXp1zvW3qIRbPgjL3GQO+MwcnFPLpwFlS\nwpKvXRuOA+m8Df3QUNpIl8x90oFzv/HM5AyJXYTDzMPpjaoS86sjU4+yNBgQ\nJMt3\r\n=OrIl\r\n-----END PGP SIGNATURE-----\r\n"},"gitHead":"901ff377f0c8c0294c3c3184d17755b1ea5b2498","options":{"default":{"display-badge":true,"display-label":true,"display-scope":true,"underline-label":true,"display-filename":false,"display-datestamp":false,"display-timestamp":false,"underline-message":false}},"scripts":{"test":"xo"},"_npmUser":{"name":"klauscfhq","email":"klauscfhq@protonmail.com"},"repository":{"url":"git+https://github.com/klauscfhq/signale.git","type":"git"},"_npmVersion":"6.0.0","description":"ðŸ‘‹ Fancy console status messages","directories":{},"_nodeVersion":"8.11.1","dependencies":{"chalk":"^2.3.2","figures":"^2.0.0","pkg-conf":"^2.1.0","camelcase-keys":"^4.2.0"},"_hasShrinkwrap":false,"devDependencies":{"xo":"^0.20.3"},"_npmOperationalInternal":{"tmp":"tmp/signale_0.0.0_1525731008654_0.12410047200513419","host":"s3://npm-registry-packages"}},"1.0.0":{"name":"signale","version":"1.0.0","author":{"url":"https://klauscfhq.github.io","name":"Klaus Sinani","email":"klauscfhq@protonmail.com"},"license":"MIT","_id":"signale@1.0.0","maintainers":[{"name":"klauscfhq","email":"klauscfhq@protonmail.com"}],"homepage":"https://github.com/klauscfhq/signale#readme","bugs":{"url":"https://github.com/klauscfhq/signale/issues"},"xo":{"space":2},"dist":{"shasum":"8e69b6c4fed938aa5e58e47761c82ca6a85c216f","tarball":"https://registry.npmjs.org/signale/-/signale-1.0.0.tgz","fileCount":21,"integrity":"sha512-VcHeGzrBrwzu9yB2+g7Gr1e+AeoM7XOHr9TlxsVbc33TPez0oAag83ezI5XRwHRRteq/Fy/tj8y8LygMdo+5Uw==","signatures":[{"sig":"MEUCIQDlp3zTMAXP7JR4GjJSW2R2q5fU7Xl3JkfKTaxUaRyxwwIgSUtT0J7RLxa5TnVjyv+bBnT+Tj6o+ZTABAFD4nkTKO4=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":783600,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa+6fZCRA9TVsSAnZWagAAvVQP/i+KHw1/xDuMi3R3yBc1\n12ixVMNZMCGWUimi97MTJ1WZeb+IeNqDXT3d31gaRyYA7kpdCPGCHwASLhW2\n7QG2fp6MtYi8rpNjkZWKDrZyOvLmbHStSkuusMslbkllT/PgpO9D3ta1FwMb\ncc96oPZRygmrbBuKo/bvSYKIA65c6nc0kwk5K45Xoql2Gh4XUtiYhVgabr0N\njmL3rv4WxjuftMQm/rcmdwl3tveA4SP0qzeNjDByE/F+139l1VG/ZGnlHGkW\nKwa6979YzMasEMrKCjoEQ+hPyHvBgPQj5Fbgdlx5DiKRAe3tuF7rCifqgQhg\n0PmMdXxFCgsZUYZYI1eW4/DBxl66aFDfbQKRdWDs/U3YrZys++5TlZpvmItB\nif1R2xolxn7hAEg+zyDyzx0+PPn5zG4hDO7UVPr0qoaVqfEvBZp7LI3U7+UD\nI0sWmXQyEywE7AqkUmWiRXHfWR0gNKlM5b7Xf2ENGij4raBA9qEVh+k1w/FK\np0HX3S98vJtns6d9YglnBSKa+uQaEh2NdwUabIFSzzlWx3dG/AQAvW0SY87E\n4GkhGhA2kaA44wJnIRiQHBkcFdNRpOgMp7TBySgVpTQnvzrwFtEp3XT/rK1j\nt839x+R9XU1eUpnn1wVbaWTB4DKD/XfJ3oOXNg8cLRGHjsNMMCi6PgNkalmA\nIdgu\r\n=HisM\r\n-----END PGP SIGNATURE-----\r\n"},"gitHead":"ebfbe5508b04573e09e2efdc04be51346a61605b","options":{"default":{"displayDate":false,"displayBadge":true,"displayLabel":true,"displayScope":true,"underlineLabel":true,"displayFilename":false,"displayTimestamp":false,"underlineMessage":false}},"scripts":{"test":"xo"},"_npmUser":{"name":"klauscfhq","email":"klauscfhq@protonmail.com"},"repository":{"url":"git+https://github.com/klauscfhq/signale.git","type":"git"},"_npmVersion":"6.0.1","description":"ðŸ‘‹ Hackable console logger","directories":{},"_nodeVersion":"8.11.1","dependencies":{"chalk":"^2.3.2","figures":"^2.0.0","pkg-conf":"^2.1.0"},"_hasShrinkwrap":false,"devDependencies":{"xo":"*"},"_npmOperationalInternal":{"tmp":"tmp/signale_1.0.0_1526441943400_0.17286838412077765","host":"s3://npm-registry-packages"}},"1.0.1":{"name":"signale","version":"1.0.1","author":{"url":"https://klauscfhq.github.io","name":"Klaus Sinani","email":"klauscfhq@protonmail.com"},"license":"MIT","_id":"signale@1.0.1","maintainers":[{"name":"klauscfhq","email":"klauscfhq@protonmail.com"}],"homepage":"https://github.com/klauscfhq/signale#readme","bugs":{"url":"https://github.com/klauscfhq/signale/issues"},"xo":{"space":2},"dist":{"shasum":"29c1a5e6b7943d42ed455130692eb75eb8b94851","tarball":"https://registry.npmjs.org/signale/-/signale-1.0.1.tgz","fileCount":19,"integrity":"sha512-kCPDy+OlKYESQ/JXJQjuijYL8LH5nHVSXioG24ETR58yFC417LvMetThxU2nI5pbQt420fbbkCu5yJMLRzy0qQ==","signatures":[{"sig":"MEQCIE+Gq5ImoN5f8JoWWpnjo/WM/RJH0CKvs8SBqrHk+L4fAiB3xJqKaq/o4wUlMb3nQqnZk0VguXPIf4XzAanFwEfKbg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":782317,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa+6hLCRA9TVsSAnZWagAA2l0P/iiQOC1U+tJ3wyudb/hH\nCscHH2SAePM94D16xEgrKqmMCFZmEs1hCu+92Y9um+TtNq7Ph8TborFf8Mk2\n8JT3EqGKdlzdF4d18o3vovK2le4rIZys3YSxtZWoVbd+UbepzNdW1v3v0oKx\nYEtka23LRWsY6+Himm3+A95MxaCwPSXOT3MTIpWpiA44ztIJHrrSv28nCGm9\nMFVWDKcH66bO0dOiTXRbIKQcKElFlpL8f204JKCqrpP/mNYauNRbm/YJ7rPa\n4yW94LoyZr/zAcFAId/qOOJy1Kz+yZ7T7gEfwdsWCPmUHpNK2EBs2xLQIe91\n+97LklO0DH1PyPa6z4wPudQXRRFuc5w+297aLCgUmUQwYYZH0oekbudwehRv\nhw8vvzxJ1TYuN0CJNK+16fFv+FpdsaSJnBL1dlXMT+RX/Ok/Ok3mJZ8slEIh\nlrA+rfBSVTutilxuY5+/wo8o1c9lHSfA4Cq39DYOnZOXC0I8q/fLEju8dkkq\nUVGjqyUI6f/Cx6N/VJPwTfPKWobOgS5A1KY7+kJ66EFj7QhOlSfmlFdHq2Iy\njBUdDsE9qsUFvYLlcVxi2iZvC5jratU66kAEy6MsqUVlddMqYpVyxh8hvbDs\ny/0Vv/AbaxDbgv6EOLdmDIZLEymfxhDY+Gz9M/nYWUW8e6+yS2WDLhUQfLaQ\n1qvM\r\n=9XgT\r\n-----END PGP SIGNATURE-----\r\n"},"gitHead":"ebfbe5508b04573e09e2efdc04be51346a61605b","options":{"default":{"displayDate":false,"displayBadge":true,"displayLabel":true,"displayScope":true,"underlineLabel":true,"displayFilename":false,"displayTimestamp":false,"underlineMessage":false}},"scripts":{"test":"xo"},"_npmUser":{"name":"klauscfhq","email":"klauscfhq@protonmail.com"},"repository":{"url":"git+https://github.com/klauscfhq/signale.git","type":"git"},"_npmVersion":"6.0.1","description":"ðŸ‘‹ Hackable console logger","directories":{},"_nodeVersion":"8.11.1","dependencies":{"chalk":"^2.3.2","figures":"^2.0.0","pkg-conf":"^2.1.0"},"_hasShrinkwrap":false,"devDependencies":{"xo":"*"},"_npmOperationalInternal":{"tmp":"tmp/signale_1.0.1_1526442058391_0.7676954015477553","host":"s3://npm-registry-packages"}},"1.1.0":{"name":"signale","version":"1.1.0","keywords":["hackable","colorful","console","logger"],"author":{"url":"https://klauscfhq.github.io","name":"Klaus Sinani","email":"klauscfhq@protonmail.com"},"license":"MIT","_id":"signale@1.1.0","maintainers":[{"name":"klauscfhq","email":"klauscfhq@protonmail.com"}],"homepage":"https://github.com/klauscfhq/signale#readme","bugs":{"url":"https://github.com/klauscfhq/signale/issues"},"xo":{"space":2},"dist":{"shasum":"b2f6d20f09df83c07fe18a968260b628f9d3f0f8","tarball":"https://registry.npmjs.org/signale/-/signale-1.1.0.tgz","fileCount":23,"integrity":"sha512-8ukg+KX8iLeqHMWimMf+vWLdvNtvAd2TQYKlkvhfzHXpNI8PIR8sM5CBdPcacdEBtqUg1c2mNvv7oF5bJyHD4w==","signatures":[{"sig":"MEUCIQD1gp3jNx0EI3tQvZrnjsqqTgkXnjjrqVzt0UWwEGRRBQIgScuY4wKc3m7vcbBK+1ni185e3ohwDLEHStnvz9+B1lo=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":787746,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbAe/nCRA9TVsSAnZWagAAttAQAJv3ygfOCr5lznkrk8gh\neDR+qKwBZneEzOYk91s/sAo2JMqS2GhpUYfLFX3l8V6+EmuklCcXLF7Adss9\nXQ8kKK0r+59hxiwpAW66Iw1Gw6uHoqiKAr9Zhs09wTx9PSt0Tcda6zevMu0f\nrlzNYEGcx3mfUx38Vk0Gwf+L0BISi8fMjkWnnqvT9DM4X9e9OSmZVBLRRE/C\nvjU/gyiWe8Stq8Wrn+JX+IgLMjpktqu/v5Ho8SYR0Fp7P3QmyROsLdgz55r7\n90ZrWSPdyufxoL2mFbretWRaQw1Rk1/+BPJmLGpvD9ufz/J7v51uIxpLj11v\nzCEhRaRX6ejP+lI1ovS1Effa2Zd8+nJ2OGc8q52l7aRWTBn/TD3Qu307kkex\nsx2u2Ww+aub/VXKGWO3R1i76P6n2Kyry+aiUpoNHkVCo86aCBd/LE7j4Iax5\ndSmYpj/XxkXnoRH64vdsvn18lhQsgqPrWaPfBJsREU8+srncixXJaj9TY8AA\nz3AT4SzUgVG9BQFN4c/Cgd33hcPHFOX8NnEqBRFqm0fXZl8bWPMroLJKraJf\n6WL/Nkg9ZVcqsIG3l6eUplPF5VYWoFwe5EzjoqeCBKdFK5iV2Pk791ktt3GO\nIweLs1unKRIyqpsKQuyXxt2mkTcJY/rDXCp/ihhgP28UNWeT+HlG4hUAiLmQ\nUD49\r\n=93wE\r\n-----END PGP SIGNATURE-----\r\n"},"gitHead":"00944088d079b3fe940235d76e9ec54b46be8a3e","options":{"default":{"displayDate":false,"displayBadge":true,"displayLabel":true,"displayScope":true,"underlineLabel":true,"displayFilename":false,"displayTimestamp":false,"underlineMessage":false}},"scripts":{"test":"xo"},"_npmUser":{"name":"klauscfhq","email":"klauscfhq@protonmail.com"},"repository":{"url":"git+https://github.com/klauscfhq/signale.git","type":"git"},"_npmVersion":"6.0.1","description":"ðŸ‘‹ Hackable console logger","directories":{},"_nodeVersion":"8.11.1","dependencies":{"chalk":"^2.3.2","figures":"^2.0.0","pkg-conf":"^2.1.0"},"_hasShrinkwrap":false,"devDependencies":{"xo":"*"},"_npmOperationalInternal":{"tmp":"tmp/signale_1.1.0_1526853605761_0.6848534377661797","host":"s3://npm-registry-packages"}},"1.2.0":{"name":"signale","version":"1.2.0","keywords":["hackable","colorful","console","logger"],"author":{"url":"https://klauscfhq.github.io","name":"Klaus Sinani","email":"klauscfhq@protonmail.com"},"license":"MIT","_id":"signale@1.2.0","maintainers":[{"name":"klauscfhq","email":"klauscfhq@protonmail.com"}],"homepage":"https://github.com/klauscfhq/signale#readme","bugs":{"url":"https://github.com/klauscfhq/signale/issues"},"xo":{"space":2},"dist":{"shasum":"b7803f53567f0c4ad65cde71511afe18d1dd0a87","tarball":"https://registry.npmjs.org/signale/-/signale-1.2.0.tgz","fileCount":23,"integrity":"sha512-eeGDUId9F9STTYaBT6Vsui9VUAhKpEI7wEBIB0XlQ7zF+I3+pxXzJK72sh67qNiOvt+SC4i8LlbEbai1YBCNyw==","signatures":[{"sig":"MEQCIFf56LnkurPDl9oozj9XxKiOplvNoPK+wWKUHp7nXeclAiAH9w0Z4ySM1yk6cAK+N/MbQN9ct4J8pUuiceBjQmdNrA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":793505,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbHuSRCRA9TVsSAnZWagAAJkgP+QEwAUGYD8rcaYuQ6aIz\nFTOErW618fh6DFJYKW39yHMVzxpAsQy2eoSDI28jrH6PMm5z7bWr8s6Cv95+\notVDkQlWGtilaZ4PM2q+kMr2gXqDxJ1KgN2HjEHKqs7w2kraP8PHNOrywxhu\nG1Yxa5iCuG6y2pWeYMwgSSgTah6DoL5FFDx92X80Pc73u9EdrkHamKykasy7\nXeKoLk55mjWJpOFH9hykayHRkcPumqX3grFHys7V7yXHkwHOhZ1oWX5o2Ds9\nBficO7dkqhK/owIVMeks30jme9l6YrDjqMjHDxfi47MwTAUiWAJTLVDoK5eB\negh+yBZoUrsLBgaQoEPFsk+8KELO//35O60HrF9YOqgDq1jgsMfOPR7XUOJd\nzy4V9EJ/rbwPIa2rFFPiDApQYLLb3EYw0ngbxB7o2zkCmOZ4kB2cEJhjCGIN\nKLRIYuNpUE2n0aPydrwibqGR5l8KdCWZNWF+qUCc2VB9QrQ8sfMNuIYQomWV\nXqzHRuJqC6PFwi+Rn57OCgSRfQ0dl1sbPzTWKK8+VOyfH/aKgp0eCV8GHa/f\nsbqtSZTuZ8MXowL1aqP3CgkWgAX9sq8CeeEBURgGOesywymyZqxUyk8ZVIrq\nNxWFIsj8Zk60uVjNOiDhL+gkaoMFcGeUZrGika4fwBX44uJTopiFrHLZ8KDj\nGf1m\r\n=q3kK\r\n-----END PGP SIGNATURE-----\r\n"},"gitHead":"aeb3446a0242feaf53e2e78dcb8ad7fcc334530c","options":{"default":{"displayDate":false,"displayBadge":true,"displayLabel":true,"displayScope":true,"underlineLabel":true,"uppercaseLabel":false,"displayFilename":false,"underlinePrefix":false,"underlineSuffix":false,"displayTimestamp":false,"underlineMessage":false,"coloredInterpolation":false}},"scripts":{"test":"xo"},"_npmUser":{"name":"klauscfhq","email":"klauscfhq@protonmail.com"},"repository":{"url":"git+https://github.com/klauscfhq/signale.git","type":"git"},"_npmVersion":"6.1.0","description":"ðŸ‘‹ Hackable console logger","directories":{},"_nodeVersion":"10.4.0","dependencies":{"chalk":"^2.3.2","figures":"^2.0.0","pkg-conf":"^2.1.0"},"_hasShrinkwrap":false,"devDependencies":{"xo":"*"},"_npmOperationalInternal":{"tmp":"tmp/signale_1.2.0_1528751248222_0.5786704241516456","host":"s3://npm-registry-packages"}},"1.2.1":{"name":"signale","version":"1.2.1","keywords":["hackable","colorful","console","logger"],"author":{"url":"https://klauscfhq.github.io","name":"Klaus Sinani","email":"klauscfhq@protonmail.com"},"license":"MIT","_id":"signale@1.2.1","maintainers":[{"name":"klauscfhq","email":"klauscfhq@protonmail.com"}],"homepage":"https://github.com/klauscfhq/signale#readme","bugs":{"url":"https://github.com/klauscfhq/signale/issues"},"xo":{"space":2},"dist":{"shasum":"fbd4b952603ea3315dbe9e88f4f482f336cee828","tarball":"https://registry.npmjs.org/signale/-/signale-1.2.1.tgz","fileCount":25,"integrity":"sha512-yY7GbeTGqDLC2ggcXR9hyzcgZnNT+cooPAizWRpUOHYd0DtNVRXhMqM3+F6ZbKav9oCg1r/YtJaB250IAhn/Hg==","signatures":[{"sig":"MEUCIAc/q31bJYLM/etWWihm4i/+6E011DZLOUQcfgvVRZ85AiEAmACqh+037quHGjDdN1YpJfMYMchoSOXR7cQyJ6rOZ2Q=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":859250,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbJoIvCRA9TVsSAnZWagAA+w8P/ji7MIUEbFkO4KOtTTHX\neSIM9VXuUrH+2fv+C33lFqX03hk9732g35HNtgwWoufuf5tLk2ECNVmyOeWt\nt6ZtHYzybnd8Z9hV+XqNaeLQOreTqS0Zt38XIQYMxv2V6qpyAaDbX8AbMI46\nfZSi7pAgy5fh4gzy7jZOF8Ksr0mX4tLcBWzzMohKD5lAEIkEm0yvep259hUh\n9niCIwpViwI8//EVmjWOl/V5cTX9pIJ9PXNuDr+R5xOLvAsLitjLp+W56Gq7\n7TCWEmCqW5kwDh+LFFh8pDa9WaTrk7RZiWUV0RXP4B4A34x+7daU14nhrhLi\nD3qI5WE6dTEhliHu2a6m48WTX3bRAws3SyOtBRwrSHgHWXUJQZLOR/MBemUN\n1lt9/pPqHCl5f1CN6sxCTBBId9vujIUdxVHhUufMLQll4Brx9MpLXxRsc1Id\n7BoV7DWbXpnJ1t23+NKgzfDiNxe3AIaP5qARw2fiGjpJNipjNK3Rg/tYkRTA\nMgVGVvyMjV1xacTEVKyA4/mSR+OC9XwTTjKDUPfPK+0ZN0kBxfby/3Dg/+Yu\nBhsdLRyo6UZGSd+8SxSYqomQEOWLO2PKhc2Ulju7/sL8CdsQkD3U4ZmaM/4B\nHpfnroTvs+Sm23KzB6qcmn+MkNQyRNz/QRi9zFdh0VWTXahPxUdhUfbiMkEd\nSqnh\r\n=vgUk\r\n-----END PGP SIGNATURE-----\r\n"},"gitHead":"69d5e1866a9f63fa04dc87637479f7148e6616f1","options":{"default":{"displayDate":false,"displayBadge":true,"displayLabel":true,"displayScope":true,"underlineLabel":true,"uppercaseLabel":false,"displayFilename":false,"underlinePrefix":false,"underlineSuffix":false,"displayTimestamp":false,"underlineMessage":false,"coloredInterpolation":false}},"scripts":{"test":"xo"},"_npmUser":{"name":"klauscfhq","email":"klauscfhq@protonmail.com"},"repository":{"url":"git+https://github.com/klauscfhq/signale.git","type":"git"},"_npmVersion":"6.1.0","description":"ðŸ‘‹ Hackable console logger","directories":{},"_nodeVersion":"10.4.1","dependencies":{"chalk":"^2.3.2","figures":"^2.0.0","pkg-conf":"^2.1.0"},"_hasShrinkwrap":false,"devDependencies":{"xo":"*"},"_npmOperationalInternal":{"tmp":"tmp/signale_1.2.1_1529250349439_0.17912819173620154","host":"s3://npm-registry-packages"}},"1.3.0":{"name":"signale","version":"1.3.0","keywords":["hackable","colorful","console","logger"],"author":{"url":"https://klauscfhq.github.io","name":"Klaus Sinani","email":"klauscfhq@protonmail.com"},"license":"MIT","_id":"signale@1.3.0","maintainers":[{"name":"klauscfhq","email":"klauscfhq@protonmail.com"}],"homepage":"https://github.com/klauscfhq/signale#readme","bugs":{"url":"https://github.com/klauscfhq/signale/issues"},"xo":{"space":2},"dist":{"shasum":"1b4917c2c7a8691550adca0ad1da750a662b4497","tarball":"https://registry.npmjs.org/signale/-/signale-1.3.0.tgz","fileCount":6,"integrity":"sha512-TyFhsQ9wZDYDfsPqWMyjCxsDoMwfpsT0130Mce7wDiVCSDdtWSg83dOqoj8aGpGCs3n1YPcam6sT1OFPuGT/OQ==","signatures":[{"sig":"MEYCIQCTgJtkky0cRJZCpFAVNh56RxYkL1JmCAV3FQWThcOPXAIhALYeGP6nev8daoNvWgrZR8PcdXL9ePEfDh7bJb8eoWni","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":31573,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJblDneCRA9TVsSAnZWagAAjvEP/jgtHMk94xa62E0svSyN\notlp0ZcPFQcOGjpWdD/CSUXIqL1MwV31fBYByFMAW31kqF2d9a8As6eBxsjz\n0j4yO43wcfnuMRertFa00WPG7/UXInHPiNjBon8r4Wixja09U6BT/Y6Yixsq\n7wDxyTpbpUWrnGY6DrGRsQ/gOTvp156+lJ35dAVJu5EJZnAVmsFPDacF2u4d\nlnyT6ZnimpttVdYoKcke3ZnpUMzPg3OmvUi1Ti+2pUJTH0taU8WhFctg2S90\nC/r0RecV1k7AjKVtgJaUmRpAgZKUAe1CzO46oVl/7J2obYpwE1/eEn6YSjlH\npLXlD3WzKlZYqO8eLknlLTeAk1D5tpjVLMY+D92QhTiSF2+iZNaTCge2DOz8\nP9k57S/Leo9tErFGnz+Ekoojilk7bVKil4W8/7ynGJ58zRHceifkKJhKt6QZ\nUpG9e0jVwZ3F5HpeZtEm/cA6mp6AK/H1Sl4bGH99jWlxRZ0q5QrnpuUCHuuy\n8Hdgkp4gf7DZkGKyC4ZZupC+e5jP634wewEcLVU6XMABQl8Uy52pWuIKo6fW\nZOnQjI0ICKEHW7peZgtbqlkkQNa5c3Whnu6FBXDn/xW3oAlC78+Mcn29ykEM\npQCSXlkJb1KKIdOMuWdspR5uE0yMmO+9OOsEa5fFPHqXHxfVFeVfefQOJY+f\nd+bV\r\n=uijK\r\n-----END PGP SIGNATURE-----\r\n"},"engines":{"node":">=6"},"gitHead":"89e21d703dfedb424537a02df4fad7b1981bcb67","options":{"default":{"displayDate":false,"displayBadge":true,"displayLabel":true,"displayScope":true,"underlineLabel":true,"uppercaseLabel":false,"displayFilename":false,"underlinePrefix":false,"underlineSuffix":false,"displayTimestamp":false,"underlineMessage":false,"coloredInterpolation":false}},"scripts":{"test":"xo"},"_npmUser":{"name":"klauscfhq","email":"klauscfhq@protonmail.com"},"repository":{"url":"git+https://github.com/klauscfhq/signale.git","type":"git"},"_npmVersion":"6.4.1","description":"ðŸ‘‹ Hackable console logger","directories":{},"_nodeVersion":"8.11.1","dependencies":{"chalk":"^2.3.2","figures":"^2.0.0","pkg-conf":"^2.1.0"},"_hasShrinkwrap":false,"devDependencies":{"xo":"*"},"_npmOperationalInternal":{"tmp":"tmp/signale_1.3.0_1536440797801_0.7007968798085615","host":"s3://npm-registry-packages"}},"1.4.0":{"name":"signale","version":"1.4.0","keywords":["hackable","colorful","console","logger"],"author":{"url":"https://klaussinani.github.io","name":"Klaus Sinani","email":"klaussinani@gmail.com"},"license":"MIT","_id":"signale@1.4.0","maintainers":[{"name":"klauscfhq","email":"klauscfhq@protonmail.com"},{"name":"klaussinani","email":"klaussinani@gmail.com"}],"homepage":"https://github.com/klaussinani/signale#readme","bugs":{"url":"https://github.com/klaussinani/signale/issues"},"xo":{"space":2},"dist":{"shasum":"c4be58302fb0262ac00fc3d886a7c113759042f1","tarball":"https://registry.npmjs.org/signale/-/signale-1.4.0.tgz","fileCount":6,"integrity":"sha512-iuh+gPf28RkltuJC7W5MRi6XAjTDCAPC/prJUpQoG4vIP3MJZ+GTydVnodXA7pwvTKb2cA0m9OFZW/cdWy/I/w==","signatures":[{"sig":"MEUCIF9uUsmm1BX2OEJOzHVo8zDHmGUUJMwyOU+u1XynQX+WAiEAmJJxSU9xakdjvXTQA7K9RAYLIVQtN/xeMvUDjzO5S6E=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":37225,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcddA4CRA9TVsSAnZWagAAjusQAIgBeI+WKCcSbB6GmPdJ\n34gy/U1XC+aZdf+0soWLUB2y8KYJZtqr0U4Oi+KRj4V4OSRTGoBTT1ndQRLU\n0qYZ5UrBeZ4LGSM9ze/ZK6I+VZL73mot4NX8KtqkE0ehHVKvs2rb7yGVHRmz\nBPqHAjlrf4MNsIpxwx0NFhV8Gt0AG5raMAoxbCt6SBCByQiN/OHY0wL82uHk\nJ4tGr69v/vzTQiHg5ITghzO3jAh3lY6G42+msMfZU7saUzo4Dn8Ajf4c1zIw\nEhyUJKvGrML1IOoldC91F5bKWYcdKoOo2kZSbNVlJZWa3cApaWCHXkJPg1UQ\n1vlZb+I30mcHK6EbA8Iq+ZMBZG5iO/gz7gSXcb0aZjr3cCYod5NUduDiCREM\nIQCnUML7ho0SlfQnO0Uo1HKeWiUI+BdRbAzId5m+mZ4BpgNO8bF/RSqGw3XQ\nz1HPp36anfKU5CHZEf0Nz69qnQ7Ij/vGnLi5Kb8WVO8KTaQD/FbbCxgaVIqA\nR0kC+F0fGKxbLLvIKkhnAzNHBgknsePWpLaQf4y5hPiMjopOXaxzpFth0Z/L\nnfRnsILrJnJq1dFhEdBX8gxEdIz0v0GTQlel0B4GKV3peqIh9EefHO+eDwWP\nHGa02TV0QU+8Rg7NXSUk7Y7S+AuKX35hDMZhD5qMRc9+I2sSbrnFBy2WubnC\nlXk8\r\n=UsQY\r\n-----END PGP SIGNATURE-----\r\n"},"engines":{"node":">=6"},"gitHead":"2e347c59f052f7579a3af15337fcb2c6945d50e7","options":{"default":{"displayDate":false,"displayBadge":true,"displayLabel":true,"displayScope":true,"underlineLabel":true,"uppercaseLabel":false,"displayFilename":false,"underlinePrefix":false,"underlineSuffix":false,"displayTimestamp":false,"underlineMessage":false}},"scripts":{"test":"xo"},"_npmUser":{"name":"klaussinani","email":"klaussinani@gmail.com"},"repository":{"url":"git+https://github.com/klaussinani/signale.git","type":"git"},"_npmVersion":"6.4.1","description":"ðŸ‘‹ Hackable console logger","directories":{},"_nodeVersion":"10.15.1","dependencies":{"chalk":"^2.3.2","figures":"^2.0.0","pkg-conf":"^2.1.0"},"_hasShrinkwrap":false,"devDependencies":{"xo":"*"},"_npmOperationalInternal":{"tmp":"tmp/signale_1.4.0_1551224886737_0.913914644656747","host":"s3://npm-registry-packages"}}},"time":{"created":"2018-05-07T22:10:08.653Z","modified":"2025-10-02T09:39:48.349Z","0.0.0":"2018-05-07T22:10:08.737Z","1.0.0":"2018-05-16T03:39:03.542Z","1.0.1":"2018-05-16T03:40:58.624Z","1.1.0":"2018-05-20T22:00:05.852Z","1.2.0":"2018-06-11T21:07:28.411Z","1.2.1":"2018-06-17T15:45:49.561Z","1.3.0":"2018-09-08T21:06:37.963Z","1.4.0":"2019-02-26T23:48:06.889Z"},"bugs":{"url":"https://github.com/klaussinani/signale/issues"},"author":{"url":"https://klaussinani.github.io","name":"Klaus Sinani","email":"klaussinani@gmail.com"},"license":"MIT","homepage":"https://github.com/klaussinani/signale#readme","keywords":["hackable","colorful","console","logger"],"repository":{"url":"git+https://github.com/klaussinani/signale.git","type":"git"},"description":"ðŸ‘‹ Hackable console logger","maintainers":[{"email":"klaudiosinani@protonmail.ch","name":"klaudiosinani"}],"readme":"<h1 align=\"center\">\n  Signale\n</h1>\n\n<h4 align=\"center\">\n  ðŸ‘‹ Hackable console logger\n</h4>\n\n<div align=\"center\">\n  <img alt=\"Header\" src=\"media/header.png\" width=\"88%\">\n</div>\n\n<p align=\"center\">\n  <a href=\"https://travis-ci.com/klaussinani/signale\">\n    <img alt=\"Build Status\" src=\"https://travis-ci.com/klaussinani/signale.svg?branch=master\">\n  </a>\n  <a href=\"https://www.npmjs.com/package/signale\">\n    <img alt=\"NPM Downloads\" src=\"https://img.shields.io/npm/dt/signale.svg\">\n  </a>\n</p>\n\n## Description\n\nHackable and configurable to the core, signale can be used for logging purposes, status reporting, as well as for handling the output rendering process of other node modules and applications.\n\nRead this document in: [ç®€ä½“ä¸­æ–‡](https://github.com/klaussinani/signale/blob/master/docs/readme.zh_CN.md).\n\nVisit the [contributing guidelines](https://github.com/klaussinani/signale/blob/master/contributing.md#translating-documentation) to learn more on how to translate this document into more languages.\n\nCome over to [Gitter](https://gitter.im/klaussinani/signale) or [Twitter](https://twitter.com/klaussinani) to share your thoughts on the project.\n\n## Highlights\n\n- 16 out-of-the-box loggers\n- Hackable to the core\n- Clean and beautiful output\n- Integrated timers\n- Custom pluggable loggers\n- Interactive and regular modes\n- Secrets & sensitive information filtering\n- Filename, date and timestamp support\n- Scoped loggers and timers\n- Scaled logging levels mechanism\n- String interpolation support\n- Multiple configurable writable streams\n- Simple and minimal syntax\n- Globally configurable through `package.json`\n- Overridable configuration per file and logger\n\n## Contents\n\n- [Description](#description)\n- [Highlights](#highlights)\n- [Install](#install)\n- [Usage](#usage)\n- [Configuration](#configuration)\n- [API](#api)\n- [Development](#development)\n- [Related](#related)\n- [Who's Using It?](#whos-using-it)\n- [Team](#team)\n- [License](#license)\n\n## Install\n\n```bash\nnpm install signale\n```\n\n## Usage\n\n### Default Loggers\n\nImport signale and start using any of the default loggers.\n\n<details>\n<summary>View all of the available loggers.</summary>\n\n<br/>\n\n- `await`\n- `complete`\n- `error`\n- `debug`\n- `fatal`\n- `fav`\n- `info`\n- `note`\n- `pause`\n- `pending`\n- `star`\n- `start`\n- `success`\n- `wait`\n- `warn`\n- `watch`\n- `log`\n\n</details>\n\n<br/>\n\n```js\nconst signale = require('signale');\n\nsignale.success('Operation successful');\nsignale.debug('Hello', 'from', 'L59');\nsignale.pending('Write release notes for %s', '1.2.0');\nsignale.fatal(new Error('Unable to acquire lock'));\nsignale.watch('Recursively watching build directory...');\nsignale.complete({prefix: '[task]', message: 'Fix issue #59', suffix: '(@klauscfhq)'});\n```\n\n<div align=\"center\">\n  <img alt=\"Default Loggers\" src=\"media/default-loggers.png\" width=\"65%\">\n</div>\n\n### Custom Loggers\n\nTo create a custom logger define an `options` object yielding a `types` field with the logger data and pass it as argument to a new signale instance.\n\n```js\nconst {Signale} = require('signale');\n\nconst options = {\n  disabled: false,\n  interactive: false,\n  logLevel: 'info',\n  scope: 'custom',\n  secrets: [],\n  stream: process.stdout,\n  types: {\n    remind: {\n      badge: '**',\n      color: 'yellow',\n      label: 'reminder',\n      logLevel: 'info'\n    },\n    santa: {\n      badge: 'ðŸŽ…',\n      color: 'red',\n      label: 'santa',\n      logLevel: 'info'\n    }\n  }\n};\n\nconst custom = new Signale(options);\ncustom.remind('Improve documentation.');\ncustom.santa('Hoho! You have an unused variable on L45.');\n```\n\n<div align=\"center\">\n  <img alt=\"Custom Loggers\" src=\"media/custom-loggers.png\" width=\"70%\">\n</div>\n\nHere is an example where we override the default `error` and `success` loggers.\n\n```js\nconst {Signale} = require('signale');\n\nconst options = {\n  types: {\n    error: {\n      badge: '!!',\n      label: 'fatal error'\n    },\n    success: {\n      badge: '++',\n      label: 'huge success'\n    }\n  }\n};\n\nconst signale = new Signale();\nsignale.error('Default Error Log');\nsignale.success('Default Success Log');\n\nconst custom = new Signale(options);\ncustom.error('Custom Error Log');\ncustom.success('Custom Success Log');\n```\n\n<div align=\"center\">\n  <img alt=\"Default Loggers\" src=\"media/override-defaults.png\" width=\"65%\">\n</div>\n\nThe `options` object can hold any of the following attributes: `disabled`, `interactive`, `stream`, `scope` and `types`. \n\n##### `disabled`\n\n- Type: `Boolean`\n- Default: `false`\n\nDisables the logging functionality of all loggers belonging to the created instance.\n\n##### `interactive`\n\n- Type: `Boolean`\n- Default: `false`\n\nSwitches all loggers belonging to the created instance into the interactive mode.\n\n##### `logLevel`\n\n- Type: `String`\n- Default: `'info'`\n\nSets the general logging level of the created instance. Can be `'info'` - logs all messages of all loggers, `'timer'` - logs only messages of `time`, `timeEnd`, `debug`, `warn`, `error` & `fatal` loggers, `'debug'` - logs only messages of `debug`, `warn`, `error` & `fatal` loggers, `'warn'` - logs only messages of `warn`, `error` & `fatal` loggers & `'error'` - logs only messages of `error` & `fatal` loggers.\n\n##### `secrets`\n\n- Type: `(String|Number)[]`\n- Default: `[]`\n\nAn array holding secrets/sensitive-information to be removed from the body and metadata of to-be-logged messages and replaced with the default `'[secure]'` string.\n\n##### `stream`\n\n- Type: `stream.Writable|stream.Writable[]`\n- Default: `process.stdout`\n\nDestination to which the data is written, can be a single valid [Writable stream](https://nodejs.org/api/stream.html#stream_writable_streams) or an array holding multiple valid Writable streams.\n\n##### `scope`\n\n- Type: `String|String[]`\n\nName of the scope the logger is reporting from.\n\n##### `types`\n\n- Type: `Object`\n\nHolds the configuration of the custom and default loggers.\n\nAdditionally, the configuration object of each custom/default logger type, defined in the `types` option, can hold any of the following attributes: `badge`, `label`, `color` and `logLevel`. \n\n##### `badge`\n\n- Type: `String`\n\nThe icon corresponding to the logger.\n\n##### `label`\n\n- Type: `String`\n\nThe label used to identify the type of the logger.\n\n##### `color`\n\n- Type: `String`\n\nThe color of the label, can be any of the foreground colors supported by [chalk](https://github.com/chalk/chalk#colors).\n\n##### `logLevel`\n\n- Type: `String`\n- Default: `'info'`\n\nThe log level corresponding to the logger. Messages originating from the logger are displayed only if the log level is greater or equal to the above described general logging level `logLevel` of the `Signale` instance.\n\n### Scoped Loggers\n\nTo create a scoped logger from scratch, define the `scope` field inside the `options` object and pass it as argument to a new signale instance.\n\n```js\nconst {Signale} = require('signale');\n\nconst options = {\n  scope: 'global scope'\n};\n\nconst global = new Signale(options);\nglobal.success('Successful Operation');\n```\n\n<div align=\"center\">\n  <img alt=\"Scope Vanilla\" src=\"media/scope-vanilla.png\" width=\"65%\">\n</div>\n\nTo create a scoped logger based on an already existing one, use the `scope()` function, which will return a new signale instance, inheriting all custom loggers, timers, streams, configuration, interactive mode & disabled statuses from the initial one.\n\n```js\nconst signale = require('signale');\n\nconst global = signale.scope('global scope');\nglobal.success('Hello from the global scope');\n\nfunction foo() {\n  const outer = global.scope('outer', 'scope');\n  outer.success('Hello from the outer scope');\n  \n  setTimeout(() => {\n    const inner = outer.scope('inner', 'scope'); \n    inner.success('Hello from the inner scope');\n  }, 500);\n}\n\nfoo();\n```\n\n<div align=\"center\">\n  <img alt=\"Scope Existing\" src=\"media/scope-existing.png\" width=\"65%\">\n</div>\n\n### Interactive Loggers\n\nTo initialize an interactive logger, create a new signale instance with the [`interactive`](#interactive) attribute set to `true`. While into the interactive mode, previously logged messages originating from an interactive logger, will be overridden only by new ones originating from the same or a different interactive logger. Note that regular messages originating from regular loggers are not overridden by the interactive ones.\n\n```js\nconst {Signale} = require('signale');\n\nconst interactive = new Signale({interactive: true, scope: 'interactive'});\n\ninteractive.await('[%d/4] - Process A', 1);\n\nsetTimeout(() => {\n  interactive.success('[%d/4] - Process A', 2);\n  setTimeout(() => {\n    interactive.await('[%d/4] - Process B', 3);\n    setTimeout(() => {\n      interactive.error('[%d/4] - Process B', 4);\n      setTimeout(() => {}, 1000);\n    }, 1000);\n  }, 1000);\n}, 1000);\n```\n\n<div align=\"center\">\n  <img alt=\"Interactive Mode\" src=\"media/interactive-mode.gif\" width=\"65%\">\n</div>\n\n### Writable Streams\n\nBy default, all signale instances log their messages to the `process.stdout` stream. This can be modified, to match your own preference, through the [`stream`](#stream) property, where you can define a single or multiple valid Writable streams, which will be used by all logger types to log your data. Additionally, it is possible to define one or more Writable streams exclusively for a specific logger type, thus write data independently from the rest logger types.\n\n```js\nconst {Signale} = require('signale');\n\nconst options = {\n  stream: process.stderr, // All loggers will now write to `process.stderr`\n  types: {\n    error: {\n      // Only `error` will write to both `process.stdout` & `process.stderr`\n      stream: [process.stdout, process.stderr]\n    }\n  }\n};\n\nconst signale = new Signale(options);\nsignale.success('Message will appear on `process.stderr`');\nsignale.error('Message will appear on both `process.stdout` & `process.stderr`');\n```\n\n<div align=\"center\">\n  <img alt=\"Writable Streams\" src=\"media/writable-streams.png\" width=\"73%\">\n</div>\n\n### Secrets Filtering\n\nBy utilizing the `secrets` option, secrets and other sensitive information can be filtered out from the body as well as the metadata, i.e. scope names etc, of to-be-logged messages. The option is part of the configuration object passed to a `Signale` instance on its initialization, and is of type `Array<String|Number>`. The array can hold multiple secrets, all of which are removed, if present, from the to-be-logged messages and are replaced with the default `'[secure]'` string. Additionally, when the unary `signale.scope(name)` function is used, the returned `Signale` instance inherits all the secrets belonging to its parent. The secrets checking process is performed in a **case-sensitive** manner. Also, the unary [`signale.addSecrets()`](https://github.com/klaussinani/signale#signaleaddsecretssecrets) and the nullary [`signale.clearSecrets()`](https://github.com/klaussinani/signale#signaleclearsecrets) functions are available through the API for adding and clearing secrets respectively.\n\nIt is **critical** and **highly recommended** to **not type directly secrets in your code**, thus the following example serves **only** as a simple & easily reproducible usage demonstration.\n\n```js\nconst {Signale} = require('signale');\n\n// In reality secrets could be securely fetched/decrypted through a dedicated API \nconst [USERNAME, TOKEN] = ['klaussinani', 'token'];\n\nconst logger1 = new Signale({\n  secrets: [USERNAME, TOKEN]\n});\n\nlogger1.log('$ exporting USERNAME=%s', USERNAME);\nlogger1.log('$ exporting TOKEN=%s', TOKEN);\n\n// `logger2` inherits all secrets from its parent `logger1`\nconst logger2 = logger1.scope('parent');\n\nlogger2.log('$ exporting USERNAME=%s', USERNAME);\nlogger2.log('$ exporting TOKEN=%s', TOKEN);\n```\n\n<div align=\"center\">\n  <img alt=\"Secrets Filtering\" src=\"media/filter-secrets.png\" width=\"73%\">\n</div>\n\n### Timers\n\nTimer are managed by the `time()` and `timeEnd()` functions. A unique label can be used to identify a timer on initialization, though if none is provided the timer will be assigned one automatically. In addition, calling the `timeEnd()` function without a specified label will have as effect the termination of the most recently initialized timer, that was created without providing a label.\n\n```js\nconst signale = require('signale');\n\nsignale.time('test');\nsignale.time();\nsignale.time();\n\nsetTimeout(() => {\n  signale.timeEnd();\n  signale.timeEnd();\n  signale.timeEnd('test');\n}, 500);\n```\n\n<div align=\"center\">\n  <img alt=\"Timers\" src=\"media/timers.png\" width=\"60%\">\n</div>\n\n## Configuration\n\n### Global\n\nTo enable global configuration define the options under the `signale` namespace in your `package.json`.\n\nThe following illustrates all the available options with their respective default values.\n\n```json\n{\n  \"signale\": {\n    \"displayScope\": true,\n    \"displayBadge\": true,\n    \"displayDate\": false,\n    \"displayFilename\": false,\n    \"displayLabel\": true,\n    \"displayTimestamp\": false,\n    \"underlineLabel\": true,\n    \"underlineMessage\": false,\n    \"underlinePrefix\": false,\n    \"underlineSuffix\": false,\n    \"uppercaseLabel\": false\n  }\n}\n```\n\n<details>\n<summary>View all of the available options in detail.</summary>\n\n##### `displayScope`\n\n- Type: `Boolean`\n- Default: `true`\n\nDisplay the scope name of the logger. \n\n##### `displayBadge`\n\n- Type: `Boolean`\n- Default: `true`\n\nDisplay the badge of the logger.\n\n##### `displayDate`\n\n- Type: `Boolean`\n- Default: `false`\n\nDisplay the current local date in `YYYY-MM-DD` format. \n\n##### `displayFilename`\n\n- Type: `Boolean`\n- Default: `false`\n\nDisplay the name of the file that the logger is reporting from.\n\n##### `displayLabel`\n\n- Type: `Boolean`\n- Default: `true`\n\nDisplay the label of the logger.\n\n##### `displayTimestamp`\n\n- Type: `Boolean`\n- Default: `false`\n\nDisplay the current local time in `HH:MM:SS` format.\n\n##### `underlineLabel`\n\n- Type: `Boolean`\n- Default: `true`\n\nUnderline the logger label.\n\n##### `underlineMessage`\n\n- Type: `Boolean`\n- Default: `false`\n\nUnderline the logger message.\n\n##### `underlinePrefix`\n\n- Type: `Boolean`\n- Default: `false`\n\nUnderline the logger prefix.\n\n##### `underlineSuffix`\n\n- Type: `Boolean`\n- Default: `false`\n\nUnderline the logger suffix.\n\n##### `uppercaseLabel`\n\n- Type: `Boolean`\n- Default: `false`\n\nDisplay the label of the logger in uppercase.\n\n</details>\n\n### Local\n\nTo enable local configuration call the `config()` function on your signale instance. Local configurations will always override any pre-existing configuration inherited from `package.json`.\n\nIn the following example, loggers in the `foo.js` file will run under their own configuration, overriding the `package.json` one.\n\n```js\n// foo.js\nconst signale = require('signale');\n\n// Overrides any existing `package.json` config\nsignale.config({\n  displayFilename: true,\n  displayTimestamp: true,\n  displayDate: false\n}); \n\nsignale.success('Hello from the Global scope');\n```\n\n<div align=\"center\">\n  <img alt=\"Local Config\" src=\"media/local-config.png\" width=\"65%\">\n</div>\n\nAlso, scoped loggers can have their own independent configuration, overriding the one inherited by the parent instance or `package.json`. \n\n```js\n// foo.js\nconst signale = require('signale');\n\nsignale.config({\n  displayFilename: true,\n  displayTimestamp: true,\n  displayDate: false\n});\n\nsignale.success('Hello from the Global scope');\n\nfunction foo() {\n  // `fooLogger` inherits the config of `signale`\n  const fooLogger = signale.scope('foo scope');\n\n  // Overrides both `signale` and `package.json` configs\n  fooLogger.config({\n    displayFilename: true,\n    displayTimestamp: false,\n    displayDate: true\n  });\n\n  fooLogger.success('Hello from the Local scope');\n}\n\nfoo();\n```\n\n<div align=\"center\">\n  <img alt=\"Scope Config\" src=\"media/scope-config.png\" width=\"65%\">\n</div>\n\n## API\n\n#### signale.`<logger>(message[, message]|messageObj|errorObj)`\n\n##### **`logger`**\n\n- Type: `Function`\n\nCan be any default or custom logger.\n\n##### **`message`**\n\n- Type: `String`\n\nCan be one or more comma delimited strings.\n\n```js\nconst signale = require('signale');\n\nsignale.success('Successful operation');\n//=> âœ”  success  Successful operation\n\nsignale.success('Successful', 'operation');\n//=> âœ”  success  Successful operation\n\nsignale.success('Successful %s', 'operation');\n//=> âœ”  success  Successful operation\n```\n\n##### **`errorObj`**\n\n- Type: `Error Object`\n\nCan be any error object.\n\n```js\nconst signale = require('signale');\n\nsignale.error(new Error('Unsuccessful operation'));\n//=> âœ–  error  Error: Unsuccessful operation\n//        at Module._compile (module.js:660:30)\n//        at Object.Module._extensions..js (module.js:671:10)\n//        ...\n```\n\n##### **`messageObj`**\n\n- Type: `Object`\n\nCan be an object holding the `prefix`, `message` and `suffix` attributes, with `prefix` and `suffix` always prepended and appended respectively to the logged `message`.\n\n```js\nconst signale = require('signale');\n\nsignale.complete({prefix: '[task]', message: 'Fix issue #59', suffix: '(@klaussinani)'});\n//=> [task] â˜’  complete  Fix issue #59 (@klaussinani)\n\nsignale.complete({prefix: '[task]', message: ['Fix issue #%d', 59], suffix: '(@klaussinani)'});\n//=> [task] â˜’  complete  Fix issue #59 (@klaussinani)\n```\n\n#### signale.`scope(name[, name])`\n\nDefines the scope name of the logger.\n\n##### **`name`**\n\n- Type: `String`\n\nCan be one or more comma delimited strings.\n\n```js\nconst signale = require('signale');\n\nconst foo = signale.scope('foo'); \nconst fooBar = signale.scope('foo', 'bar');\n\nfoo.success('foo');\n//=> [foo] â€º âœ”  success  foo\n\nfooBar.success('foo bar');\n//=> [foo] [bar] â€º âœ”  success  foo bar\n```\n\n#### signale.`unscope()`\n\nClears the scope name of the logger.\n\n```js\nconst signale = require('signale');\n\nconst foo = signale.scope('foo'); \n\nfoo.success('foo');\n//=> [foo] â€º âœ”  success  foo\n\nfoo.unscope();\n\nfoo.success('foo');\n//=> âœ”  success  foo\n```\n\n#### signale.`config(settingsObj)`\n\nSets the configuration of an instance overriding any existing global or local configuration.\n\n##### **`settingsObj`**\n\n- Type: `Object`\n\nCan hold any of the documented [options](#global).\n\n```js\n// foo.js\nconst signale = require('signale');\n\nsignale.config({\n  displayFilename: true,\n  displayTimestamp: true,\n  displayDate: true\n});\n\nsignale.success('Successful operations');\n//=> [2018-5-15] [11:12:38] [foo.js] â€º âœ”  success  Successful operations\n```\n\n#### signale.`time([, label])`\n\n- Return Type: `String`\n\nSets a timers and accepts an optional label. If none provided the timer will receive a unique label automatically.\n\nReturns a string corresponding to the timer label. \n\n##### **`label`**\n\n- Type: `String`\n\nLabel corresponding to the timer. Each timer must have its own unique label.\n\n```js\nconst signale = require('signale');\n\nsignale.time();\n//=> â–¶  timer_0  Initialized timer...\n\nsignale.time();\n//=> â–¶  timer_1  Initialized timer...\n\nsignale.time('label');\n//=> â–¶  label    Initialized timer...\n```\n\n#### signale.`timeEnd([, label])`\n\n- Return Type: `Object`\n\nDeactivates the timer to which the given label corresponds. If no label is provided the most recent timer, that was created without providing a label, will be deactivated.\n\nReturns an object `{label, span}` holding the timer label and the total running time.\n\n##### **`label`**\n\n- Type: `String`\n\nLabel corresponding to the timer, each timer has its own unique label.\n\n```js\nconst signale = require('signale');\n\nsignale.time();\n//=> â–¶  timer_0  Initialized timer...\n\nsignale.time();\n//=> â–¶  timer_1  Initialized timer...\n\nsignale.time('label');\n//=> â–¶  label    Initialized timer...\n\nsignale.timeEnd();\n//=> â—¼  timer_1  Timer run for: 2ms\n\nsignale.timeEnd();\n//=> â—¼  timer_0  Timer run for: 2ms\n\nsignale.timeEnd('label');\n//=> â—¼  label    Timer run for: 2ms\n```\n\n#### signale.`disable()`\n\nDisables the logging functionality of all loggers belonging to a specific instance.\n\n```js\nconst signale = require('signale');\n\nsignale.success('foo');\n//=> âœ”  success  foo\n\nsignale.disable();\n\nsignale.success('foo');\n//=>\n```\n\n#### signale.`enable()`\n\nEnables the logging functionality of all loggers belonging to a specific instance.\n\n```js\nconst signale = require('signale');\n\nsignale.disable();\n\nsignale.success('foo');\n//=>\n\nsignale.enable();\n\nsignale.success('foo');\n//=> âœ”  success  foo\n```\n\n#### signale.`isEnabled()`\n\nChecks whether the logging functionality of a specific instance is enabled.\n\n```js\nconst signale = require('signale');\n\nsignale.success('foo');\n//=> âœ”  success  foo\n\nsignale.isEnabled();\n// => true\n\nsignale.disable();\n\nsignale.success('foo');\n//=>\n\nsignale.isEnabled();\n// => false\n```\n\n#### signale.`addSecrets(secrets)`\n\nAdds new secrets/sensitive-information to the targeted Signale instance.\n\n##### **`secrets`**\n\n- Type: `(String|Number)[]`\n\nArray holding the secrets/sensitive-information to be filtered out.\n\n```js\nconst signale = require('signale');\n\nsignale.log('$ exporting USERNAME=%s', 'klaussinani');\n//=> $ exporting USERNAME=klaussinani\n\nsignale.addSecrets(['klaussinani']);\n\nsignale.log('$ exporting USERNAME=%s', 'klaussinani');\n//=> $ exporting USERNAME=[secure]\n```\n\n#### signale.`clearSecrets()`\n\nRemoves all secrets/sensitive-information from the targeted Signale instance.\n\n```js\nconst signale = require('signale');\n\nsignale.addSecrets(['klaussinani']);\n\nsignale.log('$ exporting USERNAME=%s', 'klaussinani');\n//=> $ exporting USERNAME=[secure]\n\nsignale.clearSecrets();\n\nsignale.log('$ exporting USERNAME=%s', 'klaussinani');\n//=> $ exporting USERNAME=klaussinani\n```\n\n## Development\n\nFor more info on how to contribute to the project, please read the [contributing guidelines](https://github.com/klaussinani/signale/blob/master/contributing.md).\n\n- Fork the repository and clone it to your machine\n- Navigate to your local fork: `cd signale`\n- Install the project dependencies: `npm install` or `yarn install`\n- Lint code for errors: `npm test` or `yarn test`\n\n## Related\n\n- [qoa](https://github.com/klaussinani/qoa) - Minimal interactive command-line prompts\n- [taskbook](https://github.com/klaussinani/taskbook) - Tasks, boards & notes for the command-line habitat\n- [hyperocean](https://github.com/klaussinani/hyperocean) - Deep oceanic blue Hyper terminal theme\n\n## Who's Using It?\n\n- [Boostnote](https://github.com/BoostIO/Boostnote)\n- [Docz](https://github.com/pedronauck/docz)\n- [Remix by Ethereum](https://github.com/ethereum/remix)\n- [Semantic Release](https://github.com/semantic-release/semantic-release)\n- [Shower](https://github.com/shower/shower)\n- [Taskbook](https://github.com/klaussinani/taskbook)\n- [Vant](https://github.com/youzan/vant)\n\nView in detail all the packages and repositories that are using Signale [here](https://github.com/klaussinani/signale/network/dependents).\n\n## Team\n\n- Klaus Sinani [(@klaussinani)](https://github.com/klaussinani)\n\n## License\n\n[MIT](https://github.com/klaussinani/signale/blob/master/license.md)\n","readmeFilename":"readme.md","users":{"flumpus-dev":true}}