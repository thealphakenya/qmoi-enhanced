{"_id":"prompts-ncu","_rev":"4-5bf07ccdd96e3f363cda3df66816e12c","name":"prompts-ncu","dist-tags":{"latest":"3.0.2"},"versions":{"2.5.0":{"name":"prompts-ncu","version":"2.5.0","keywords":["ui","prompts","cli","prompt","interface","command-line","input","command","stdin","menu","ask","interact"],"author":{"url":"https://terkel.com","name":"Terkel Gjervig","email":"terkel@terkel.com"},"license":"MIT","_id":"prompts-ncu@2.5.0","maintainers":[{"name":"raine","email":"raine@cybersemics.org"}],"homepage":"https://github.com/raineorshine/prompts/tree/ncu#readme","bugs":{"url":"https://github.com/raineorshine/prompts/issues"},"dist":{"shasum":"eae6bb7f5564aa3937b037df1096d6dd3b828346","tarball":"https://registry.npmjs.org/prompts-ncu/-/prompts-ncu-2.5.0.tgz","fileCount":68,"integrity":"sha512-a9WdInrG7zSlmfzDszmF3r8O4grZRI8+ChV0LtagHRT4dH7F+kxkrwFPGxeS83FZgAGBx3AXoLP+c4kGJb1P3w==","signatures":[{"sig":"MEYCIQD8kqDE1TVcYgMBU8ZI1FIHLip9i02bCn9JTaz1P2vNogIhAN7Li87xXU9tuTyth7KCvnFAQPRLmw+TL3Cb57roW93b","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":188923,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJitMg8ACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrN8w//V5WHF5QLKbWUqC588EPaUsUxHHlbfkcXH9P9rVtwYuxYpzHq\r\nxL8hv1zrbRpVi9/84LjQvi4d8putVVVvXQITGl5gJ5KimA9rWYHsXudtYEBs\r\n0qNzn4fsW9e1lkV0vCs6rRnAzlq8mD5E9Ji7j6boggdgtyGf/a9LCbybHFEk\r\neFrAF91Q9XUPPrebKu4bpv7BQrOI47ngb6O7rn2KsIflJaWvdSC8WcSHF18K\r\nQqCL0C2qAXo29xIMpAA6/X6mQmj284AYZHQXtJPi2Adzn6A9562aXYigxeWA\r\nESTHxbphNupxTUsORwPnvU0MXTnOjKCUAe8caiEYkpKMwTKuwTlVPHgQtGN1\r\nTT8M2xBTRoatBVmfsnqki6G3BCg7wOF3nkiVsjC+yQ+blNXOvc/6aKXtc86J\r\nTQF7ieYGE9AgMjF8P5YzYIyUIUh4MWN2SvOQ8Rd1rnj5w9mKR3qAq+oiWpF4\r\nNkU7/I16iLZqBpWv6gDGNCs0nODViMCYbfefC8mGeCAQ1jKdTeUIp5UKYfpy\r\nGcFzBX7bSWPw/UCfbKSBpxexXtRTMLhOP06PO0bNlY4dchHKxXMaI+w56u6t\r\n8x+Rur/8+Vc+Xq+NCK7MxhuNutXOkn3uNxHPo3cuJpQOSrXhpvh5mnRr1fg5\r\nZbh0MypTbzK7aCFCjncBd3jTOPmddXVRurM=\r\n=YDQ7\r\n-----END PGP SIGNATURE-----\r\n"},"main":"index.js","engines":{"node":">= 6"},"gitHead":"41f6db915599d6f4391ebe05e599823dc309e040","scripts":{"test":"tape test/*.js | tap-spec","build":"babel lib -d dist","start":"node lib/index.js","prepublishOnly":"npm run build"},"_npmUser":{"name":"raine","email":"raine@cybersemics.org"},"repository":{"url":"git+https://github.com/raineorshine/prompts.git#ncu","type":"git"},"_npmVersion":"8.12.2","description":"Lightweight, beautiful and user-friendly prompts","directories":{},"_nodeVersion":"16.15.1","dependencies":{"kleur":"^4.0.1","sisteransi":"^1.0.5"},"_hasShrinkwrap":false,"devDependencies":{"tape":"^4.13.3","tap-spec":"^2.2.2","@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@babel/preset-env":"^7.12.1","@babel/plugin-proposal-object-rest-spread":"^7.12.1"},"_npmOperationalInternal":{"tmp":"tmp/prompts-ncu_2.5.0_1656014908533_0.5315365018797229","host":"s3://npm-registry-packages"}},"2.5.1":{"name":"prompts-ncu","version":"2.5.1","keywords":["ui","prompts","cli","prompt","interface","command-line","input","command","stdin","menu","ask","interact"],"author":{"url":"https://terkel.com","name":"Terkel Gjervig","email":"terkel@terkel.com"},"license":"MIT","_id":"prompts-ncu@2.5.1","maintainers":[{"name":"raine","email":"raine@cybersemics.org"}],"homepage":"https://github.com/raineorshine/prompts/tree/ncu#readme","bugs":{"url":"https://github.com/raineorshine/prompts/issues"},"dist":{"shasum":"0a75702e0af1d1319261113aad9153fd7267122a","tarball":"https://registry.npmjs.org/prompts-ncu/-/prompts-ncu-2.5.1.tgz","fileCount":68,"integrity":"sha512-Hdd7GgV7b76Yh9FP9HL1D9xqtJCJdVPpiM2vDtuoc8W1KfweJe15gutFYmxkq83ViFaagFM8K0UcPCQ/tZq8bA==","signatures":[{"sig":"MEQCIBt3CRG1xdmapIAVpG6LzgyxDFrLeAEXjYn/vErW/edBAiB/FFmgSrkRocqYFyUuQw3GyonzOPiNrsW0YkMLcx0Njw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":189184,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJixbRpACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmrOFQ/+KHOViSQFJi65c5ouawG2WrsYNvIGd8T+9l1n9gX7xYvFTJBs\r\nUz1OoA4VAphqUnCYWr6U7eHsI/JU7kzr5L9Yvxm5GVf2ex+Xgu9SGudD5LOB\r\nwIkmf+ATYeQmoOi0KQg86A59cXEwQZswyHJHEZzd4VmGtPq7WvndYSr/b+W7\r\numzfbvHNYBQXfOjqfufdlVq0ogANvshaZtzQ9fpUEDWk0eSc+HzwXu+Szrej\r\nBl5j8YKS6DV6lBCjzppTrP0qftLjFtTmLGlR2DqkkpYWCNSetZvyL4dx683/\r\nQIzPXHBMKNzJESkSK97KBngJeLAfv2TI1Gd5t5eS7hTHajBP/5/yrtqc/eAY\r\nrNlCSZFjLMqyBd8sANeh2D+TPx1lQyY1d9L2h1xkNNpGQMtWCU8l2/AajZnh\r\nGE1XpU43xVQP5xytpc6pBnv+F+yGRch2wrei+eIld5hTShE0szYrQaoh+XWt\r\nAvgL6h7Fty/4HMvYEWdysxep4MLp+WhRqFfcDEhG9HYdsAahX82j8Pyqyrxb\r\nG5P/ULq+D2HVWTgu+fSmXjtRXYDOghBcu/H26SUXRd+cc0IQQSJ6OBHEuX9U\r\na9VTkKbeYSM9wi5e0x8V37dWgELxpqYJYe/zJWkXqYv71O9n8Im4KIpOMMEw\r\nrFk6GqwadmfeWFzAOLWAfn/LgaJEeK+xalg=\r\n=HEZG\r\n-----END PGP SIGNATURE-----\r\n"},"main":"index.js","engines":{"node":">= 6"},"gitHead":"c3a24a465b41d11fb1f8251fbbe88a54b4c96f64","scripts":{"test":"tape test/*.js | tap-spec","build":"babel lib -d dist","start":"node lib/index.js","prepublishOnly":"npm run build"},"_npmUser":{"name":"raine","email":"raine@cybersemics.org"},"repository":{"url":"git+https://github.com/raineorshine/prompts.git#ncu","type":"git"},"_npmVersion":"8.12.2","description":"Lightweight, beautiful and user-friendly prompts","directories":{},"_nodeVersion":"16.15.1","dependencies":{"kleur":"^4.0.1","sisteransi":"^1.0.5"},"_hasShrinkwrap":false,"devDependencies":{"tape":"^4.13.3","tap-spec":"^2.2.2","@babel/cli":"^7.12.1","@babel/core":"^7.12.3","@babel/preset-env":"^7.12.1","@babel/plugin-proposal-object-rest-spread":"^7.12.1"},"_npmOperationalInternal":{"tmp":"tmp/prompts-ncu_2.5.1_1657123945123_0.43271522750137015","host":"s3://npm-registry-packages"}},"3.0.0":{"name":"prompts-ncu","version":"3.0.0","keywords":["ui","prompts","cli","prompt","interface","command-line","input","command","stdin","menu","ask","interact"],"author":{"url":"https://terkel.com","name":"Terkel Gjervig","email":"terkel@terkel.com"},"license":"MIT","_id":"prompts-ncu@3.0.0","maintainers":[{"name":"raine","email":"raine@cybersemics.org"}],"homepage":"https://github.com/raineorshine/prompts/tree/ncu#readme","bugs":{"url":"https://github.com/raineorshine/prompts/issues"},"dist":{"shasum":"716feb4874fca3dbe00af0f3de17a15d43d2228d","tarball":"https://registry.npmjs.org/prompts-ncu/-/prompts-ncu-3.0.0.tgz","fileCount":36,"integrity":"sha512-qyz9UxZ5MlPKWVhWrCmSZ1ahm2GVYdjLb8og2sg0IPth1KRuhcggHGuijz0e41dkx35p1t1q3GRISGH7QGALFA==","signatures":[{"sig":"MEUCIQCdlLnwDypNwiaP+pYSPTdjJqKEea6ONkljAbNBPyoUQAIgaqayMj9R2nUimWp3qefHbPGC/HOXTbf9i+L/YSllKLE=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":104698,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJkLfKiACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpVSw//UenBqpC+I9w8/imrdsT1uAPYHf4NwlTiskwwqF5mpHYQLMrS\r\nHPUvkPVEDrezbLNnOiW5eVw1jXh4RORMTAigauO0BRhHrZGFJLKYjgCm1QZS\r\nRMD53dT0xmMTRn3zlkQPiBI9Q+D2AcjkJ3kYnOhUUqPX2QombZuQcyJc95YU\r\nSeFHjbW0VZMpMYAUNUUyBjaMfNA5doCOEIvaLxtp5VbT50yE+AvrT4fzejEi\r\nRbAY2dO6knSg8Rjm46+vIiyZSCkMNfMeVXVbGRIOdaglbHOBtljZ2uWcCepV\r\nSm1IiOOVzaSu5X3ou73+rU3aGCtYqcTwx01veJBBxlRSakYg/cbwYJqJTmmx\r\nmlRPH/MXQ1+79tB0ktSvmOVNCIRHn8nTk2q8My7yIuB32iYXWVMWIUBKJlmN\r\nNX/JyNi1d29FBV1Pavo9Lko/XUj8mD7wtKezUKjAyp+fD8Fo3HPaPfp4QU03\r\nX7Y76dM85ppodpj7NSvLtcoEhOK12sqOgRZlkirQcje1rfEfTDvov8qjmFtP\r\naN8kJ/Xwgo5qFc5gYPvAagGGtdsNA3P5zQeBi6VBXv+7oo6roc5CM5y50u3V\r\nuZh1JJS/CFKQReGZ6C+eBM2KP2eTMTkERPXHtb3MyU8SMYUdzgwbAZ87+9H5\r\nMYThCL/VH753YW3lfnOUiwoeQP0qf5mzX/s=\r\n=I64x\r\n-----END PGP SIGNATURE-----\r\n"},"main":"index.js","types":"./index.d.ts","engines":{"node":">= 14"},"gitHead":"d358d232b4571cf85b245ae5e944be4cbe6cd9c1","scripts":{"test":"tape test/*.js | tap-spec","start":"node lib/index.js","test-types":"tsc --noEmit test/type-declarations.ts"},"_npmUser":{"name":"raine","email":"raine@cybersemics.org"},"repository":{"url":"git+https://github.com/raineorshine/prompts.git#ncu","type":"git"},"_npmVersion":"8.15.0","description":"Lightweight, beautiful and user-friendly prompts","directories":{},"_nodeVersion":"16.15.1","dependencies":{"kleur":"^4.0.1","sisteransi":"^1.0.5"},"_hasShrinkwrap":false,"devDependencies":{"tape":"^4.13.3","tap-spec":"^5.0.0","typescript":"^4.9.4","@types/node":"^18.11.17"},"_npmOperationalInternal":{"tmp":"tmp/prompts-ncu_3.0.0_1680732833840_0.5618511455683413","host":"s3://npm-registry-packages"}},"3.0.1":{"name":"prompts-ncu","version":"3.0.1","keywords":["ui","prompts","cli","prompt","interface","command-line","input","command","stdin","menu","ask","interact"],"author":{"url":"https://terkel.com","name":"Terkel Gjervig","email":"terkel@terkel.com"},"license":"MIT","_id":"prompts-ncu@3.0.1","maintainers":[{"name":"raine","email":"raine@cybersemics.org"}],"homepage":"https://github.com/raineorshine/prompts/tree/ncu#readme","bugs":{"url":"https://github.com/raineorshine/prompts/issues"},"dist":{"shasum":"06d6a00c584299a53d6a58110f170073ff86c852","tarball":"https://registry.npmjs.org/prompts-ncu/-/prompts-ncu-3.0.1.tgz","fileCount":36,"integrity":"sha512-2OjeOtQciLYeNPIXCLDxw2CdwlpnTcxKLtc/5iDJ6usMiOzj77FcLjGwx2qQ3+VerLsilzCnGntDeYBp06OZsQ==","signatures":[{"sig":"MEYCIQCXwJw7z0ain1Fa7y9XY6ZDhT28nv8r2NS1obHLjVaGcgIhAK8pR/e0b6pheQ+uf5bjDUNEFOmzeIi3c3PcNGzI1DxL","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":104657},"main":"index.js","types":"./index.d.ts","engines":{"node":">= 14"},"gitHead":"4b4e25855d65fccf3760049e50e6fbf7de362d5e","scripts":{"test":"tape test/*.js | tap-spec","start":"node lib/index.js","test-types":"tsc --noEmit test/type-declarations.ts"},"_npmUser":{"name":"raine","email":"raine@cybersemics.org"},"repository":{"url":"git+https://github.com/raineorshine/prompts.git#ncu","type":"git"},"_npmVersion":"10.8.2","description":"Lightweight, beautiful and user-friendly prompts","directories":{},"_nodeVersion":"22.0.0","dependencies":{"kleur":"^4.0.1","sisteransi":"^1.0.5"},"_hasShrinkwrap":false,"devDependencies":{"tape":"^4.13.3","tap-spec":"^5.0.0","typescript":"^4.9.4","@types/node":"^18.11.17"},"_npmOperationalInternal":{"tmp":"tmp/prompts-ncu_3.0.1_1729113647581_0.9487579304962663","host":"s3://npm-registry-packages"}},"3.0.2":{"name":"prompts-ncu","version":"3.0.2","description":"Lightweight, beautiful and user-friendly prompts","license":"MIT","repository":{"type":"git","url":"git+https://github.com/raineorshine/prompts.git#ncu"},"main":"index.js","author":{"name":"Terkel Gjervig","email":"terkel@terkel.com","url":"https://terkel.com"},"scripts":{"start":"node lib/index.js","test":"tape test/*.js | tap-spec","test-types":"tsc --noEmit test/type-declarations.ts"},"keywords":["ui","prompts","cli","prompt","interface","command-line","input","command","stdin","menu","ask","interact"],"dependencies":{"kleur":"^4.0.1","sisteransi":"^1.0.5"},"devDependencies":{"@types/node":"^18.11.17","tap-spec":"^5.0.0","tape":"^4.13.3","typescript":"^4.9.4"},"engines":{"node":">= 14"},"_id":"prompts-ncu@3.0.2","gitHead":"c9f2674c409bebf2062ffaf3cb0ac0738e8820aa","types":"./index.d.ts","bugs":{"url":"https://github.com/raineorshine/prompts/issues"},"homepage":"https://github.com/raineorshine/prompts/tree/ncu#readme","_nodeVersion":"22.0.0","_npmVersion":"10.9.1","dist":{"integrity":"sha512-BthHeqP0vwvZPk3ZmqZXhssNabxM60aBCbg/gQdxF8bQW/dy6ZGQpS8SG10bUQTMy5HKh34iI0g0TstCRZyjag==","shasum":"ffaf0388a7853f9f3e1caff51ece7828faaf62d6","tarball":"https://registry.npmjs.org/prompts-ncu/-/prompts-ncu-3.0.2.tgz","fileCount":36,"unpackedSize":104691,"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIFKYCo29vGUfk07xLGt/g3uVYL2hQ83eaJ4jDp7c3ZnTAiEA64vDALncKnV1kDaaA1Wihz2kjlv6LUtDBDbrKpEzuF8="}]},"_npmUser":{"name":"raine","email":"raine@cybersemics.org"},"directories":{},"maintainers":[{"name":"raine","email":"raine@cybersemics.org"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages-npm-production","tmp":"tmp/prompts-ncu_3.0.2_1735491134534_0.18460050306072584"},"_hasShrinkwrap":false}},"time":{"created":"2022-06-23T20:08:28.531Z","modified":"2024-12-29T16:52:14.871Z","2.5.0":"2022-06-23T20:08:28.761Z","2.5.1":"2022-07-06T16:12:25.302Z","3.0.0":"2023-04-05T22:13:54.050Z","3.0.1":"2024-10-16T21:20:47.793Z","3.0.2":"2024-12-29T16:52:14.722Z"},"bugs":{"url":"https://github.com/raineorshine/prompts/issues"},"author":{"name":"Terkel Gjervig","email":"terkel@terkel.com","url":"https://terkel.com"},"license":"MIT","homepage":"https://github.com/raineorshine/prompts/tree/ncu#readme","keywords":["ui","prompts","cli","prompt","interface","command-line","input","command","stdin","menu","ask","interact"],"repository":{"type":"git","url":"git+https://github.com/raineorshine/prompts.git#ncu"},"description":"Lightweight, beautiful and user-friendly prompts","maintainers":[{"name":"raine","email":"raine@cybersemics.org"}],"readme":"[![npm version](https://img.shields.io/npm/v/prompts-ncu)](https://www.npmjs.com/package/prompts-ncu)\n\nFork changes:\n\n- Add heading support to multiselect.\n- Change cursor style to use ❯ instead of underline and color.\n\nUsed by [npm-check-updates](https://github.com/raineorshine/npm-check-updates).\n\ne.g.\n\n```sh\nPatch   Backwards-compatible bug fixes\n❯ ◉ pacote                             ^13.6.0  →  ^13.6.1\n  ◉ @types/pacote                      ^11.1.4  →  ^11.1.5\n  ◉ eslint-plugin-jsdoc                ^39.3.2  →  ^39.3.3\n  ◉ prettier                             2.7.0  →    2.7.1\n  ◉ typescript                          ^4.7.3  →   ^4.7.4\n\nMinor   Backwards-compatible features\n  ◉ @typescript-eslint/eslint-plugin   ^5.28.0  →  ^5.29.0\n  ◉ @typescript-eslint/parser          ^5.28.0  →  ^5.29.0\n  ◉ eslint                             ^8.17.0  →  ^8.18.0\n\nMajor   Potentially breaking API changes\n  ◯ update-notifier                     ^5.1.0  →   ^6.0.0\n  ◯ @types/node                       ^17.0.44  →  ^18.0.0\n```\n\n---\n\n<p align=\"center\">\n  <img src=\"https://github.com/terkelg/prompts/raw/master/prompts.png\" alt=\"Prompts\" width=\"500\" />\n</p>\n\n<h1 align=\"center\">❯ Prompts</h1>\n\n<p align=\"center\">\n  <a href=\"https://npmjs.org/package/prompts\">\n    <img src=\"https://img.shields.io/npm/v/prompts.svg\" alt=\"version\" />\n  </a>\n  <a href=\"https://github.com/terkelg/prompts/actions/workflows/test.yml\">\n    <img src=\"https://github.com/terkelg/prompts/actions/workflows/test.yml/badge.svg\" alt=\"test\" />\n  </a>\n  <a href=\"https://npmjs.org/package/prompts\">\n    <img src=\"https://img.shields.io/npm/dm/prompts.svg\" alt=\"downloads\" />\n  </a>\n  <!---\n   <a href=\"https://packagephobia.now.sh/result?p=prompts\">\n    <img src=\"https://packagephobia.now.sh/badge?p=prompts\" alt=\"install size\" />\n  </a>\n  --->\n</p>\n\n<p align=\"center\">\n  <b>Lightweight, beautiful and user-friendly interactive prompts</b><br />\n  <sub>>_ Easy to use CLI prompts to enquire users for information▌</sub>\n</p>\n\n<br />\n\n* **Simple**: prompts has [no big dependencies](http://npm.anvaka.com/#/view/2d/prompts) nor is it broken into a [dozen](http://npm.anvaka.com/#/view/2d/inquirer) tiny modules that only work well together.\n* **User friendly**: prompt uses layout and colors to create beautiful cli interfaces.\n* **Promised**: uses promises and `async`/`await`. No callback hell.\n* **Flexible**: all prompts are independent and can be used on their own.\n* **Testable**: provides a way to submit answers programmatically.\n* **Unified**: consistent experience across all [prompts](#-types).\n\n\n![split](https://github.com/terkelg/prompts/raw/master/media/split.png)\n\n\n## ❯ Install\n\n```\n$ npm install --save prompts\n```\n\n> This package supports Node 14 and above\n\n![split](https://github.com/terkelg/prompts/raw/master/media/split.png)\n\n## ❯ Usage\n\n<img src=\"https://github.com/terkelg/prompts/raw/master/media/example.gif\" alt=\"example prompt\" width=\"499\" height=\"103\" />\n\n```js\nconst prompts = require('prompts');\n\n(async () => {\n  const response = await prompts({\n    type: 'number',\n    name: 'value',\n    message: 'How old are you?',\n    validate: value => value < 18 ? `Nightclub is 18+ only` : true\n  });\n\n  console.log(response); // => { value: 24 }\n})();\n```\n\n> See [`example.js`](https://github.com/terkelg/prompts/blob/master/example.js) for more options.\n\n\n![split](https://github.com/terkelg/prompts/raw/master/media/split.png)\n\n\n## ❯ Examples\n\n### Single Prompt\n\nPrompt with a single prompt object. Returns an object with the response.\n\n```js\nconst prompts = require('prompts');\n\n(async () => {\n  const response = await prompts({\n    type: 'text',\n    name: 'meaning',\n    message: 'What is the meaning of life?'\n  });\n\n  console.log(response.meaning);\n})();\n```\n\n### Prompt Chain\n\nPrompt with a list of prompt objects. Returns an object with the responses.\nMake sure to give each prompt a unique `name` property to prevent overwriting values.\n\n```js\nconst prompts = require('prompts');\n\nconst questions = [\n  {\n    type: 'text',\n    name: 'username',\n    message: 'What is your GitHub username?'\n  },\n  {\n    type: 'number',\n    name: 'age',\n    message: 'How old are you?'\n  },\n  {\n    type: 'text',\n    name: 'about',\n    message: 'Tell something about yourself',\n    initial: 'Why should I?'\n  }\n];\n\n(async () => {\n  const response = await prompts(questions);\n\n  // => response => { username, age, about }\n})();\n```\n\n### Dynamic Prompts\n\nPrompt properties can be functions too.\nPrompt Objects with `type` set to `falsy` values are skipped.\n\n```js\nconst prompts = require('prompts');\n\nconst questions = [\n  {\n    type: 'text',\n    name: 'dish',\n    message: 'Do you like pizza?'\n  },\n  {\n    type: prev => prev == 'pizza' ? 'text' : null,\n    name: 'topping',\n    message: 'Name a topping'\n  }\n];\n\n(async () => {\n  const response = await prompts(questions);\n})();\n```\n\n\n![split](https://github.com/terkelg/prompts/raw/master/media/split.png)\n\n\n## ❯ API\n\n### prompts(prompts, options)\n\nType: `Function`<br>\nReturns: `Object`\n\nPrompter function which takes your [prompt objects](#-prompt-objects) and returns an object with responses.\n\n\n#### prompts\n\nType: `Array|Object`<br>\n\nArray of [prompt objects](#-prompt-objects).\n These are the questions the user will be prompted. You can see the list of supported [prompt types here](#-types).\n\nPrompts can be submitted (<kbd>return</kbd>, <kbd>enter</kbd>) or canceled (<kbd>esc</kbd>, <kbd>abort</kbd>, <kbd>ctrl</kbd>+<kbd>c</kbd>, <kbd>ctrl</kbd>+<kbd>d</kbd>). No property is being defined on the returned response object when a prompt is canceled.\n\n#### options.onSubmit\n\nType: `Function`<br>\nDefault: `() => {}`\n\nCallback that's invoked after each prompt submission.\nIts signature is `(prompt, answer, answers)` where `prompt` is the current prompt object, `answer` the user answer to the current question and `answers` the user answers so far. Async functions are supported.\n\nReturn `true` to quit the prompt chain and return all collected responses so far, otherwise continue to iterate prompt objects.\n\n**Example:**\n```js\n(async () => {\n  const questions = [{ ... }];\n  const onSubmit = (prompt, answer) => console.log(`Thanks I got ${answer} from ${prompt.name}`);\n  const response = await prompts(questions, { onSubmit });\n})();\n```\n\n#### options.onCancel\n\nType: `Function`<br>\nDefault: `() => {}`\n\nCallback that's invoked when the user cancels/exits the prompt.\nIts signature is `(prompt, answers)` where `prompt` is the current prompt object and `answers` the user answers so far. Async functions are supported.\n\nReturn `true` to continue and prevent the prompt loop from aborting.\nOn cancel responses collected so far are returned.\n\n**Example:**\n```js\n(async () => {\n  const questions = [{ ... }];\n  const onCancel = prompt => {\n    console.log('Never stop prompting!');\n    return true;\n  }\n  const response = await prompts(questions, { onCancel });\n})();\n```\n\n### override\n\nType: `Function`\n\nPreanswer questions by passing an object with answers to `prompts.override`.\nPowerful when combined with arguments of process.\n\n**Example**\n```js\nconst prompts = require('prompts');\nprompts.override(require('yargs').argv);\n\n(async () => {\n  const response = await prompts([\n    {\n      type: 'text',\n      name: 'twitter',\n      message: `What's your twitter handle?`\n    },\n    {\n      type: 'multiselect',\n      name: 'color',\n      message: 'Pick colors',\n      choices: [\n        { title: 'Red', value: '#ff0000' },\n        { title: 'Green', value: '#00ff00' },\n        { title: 'Blue', value: '#0000ff' }\n      ],\n    }\n  ]);\n\n  console.log(response);\n})();\n```\n\n### inject(values)\n\nType: `Function`<br>\n\nProgrammatically inject responses. This enables you to prepare the responses ahead of time.\nIf any injected value is found the prompt is immediately resolved with the injected value.\nThis feature is intended for testing only.\n\n#### values\n\nType: `Array`\n\nArray with values to inject. Resolved values are removed from the internal inject array.\nEach value can be an array of values in order to provide answers for a question asked multiple times.\nIf a value is an instance of `Error` it will simulate the user cancelling/exiting the prompt.\n\n**Example:**\n```js\nconst prompts = require('prompts');\n\nprompts.inject([ '@terkelg', ['#ff0000', '#0000ff'] ]);\n\n(async () => {\n  const response = await prompts([\n    {\n      type: 'text',\n      name: 'twitter',\n      message: `What's your twitter handle?`\n    },\n    {\n      type: 'multiselect',\n      name: 'color',\n      message: 'Pick colors',\n      choices: [\n        { title: 'Red', value: '#ff0000' },\n        { title: 'Green', value: '#00ff00' },\n        { title: 'Blue', value: '#0000ff' }\n      ],\n    }\n  ]);\n\n  // => { twitter: 'terkelg', color: [ '#ff0000', '#0000ff' ] }\n})();\n```\n\n![split](https://github.com/terkelg/prompts/raw/master/media/split.png)\n\n\n## ❯ Prompt Objects\n\nPrompts Objects are JavaScript objects that define the \"questions\" and the [type of prompt](#-types).\nAlmost all prompt objects have the following properties:\n\n```js\n{\n  type: String | Function,\n  name: String | Function,\n  message: String | Function,\n  initial: String | Function | Async Function\n  format: Function | Async Function,\n  onRender: Function\n  onState: Function\n  stdin: Readable\n  stdout: Writeable\n}\n```\n\nEach property be of type `function` and will be invoked right before prompting the user.\n\nThe function signature is `(prev, values, prompt)`, where `prev` is the value from the previous prompt,\n`values` is the response object with all values collected so far and `prompt` is the previous prompt object.\n\n**Function example:**\n```js\n{\n  type: prev => prev > 3 ? 'confirm' : null,\n  name: 'confirm',\n  message: (prev, values) => `Please confirm that you eat ${values.dish} times ${prev} a day?`\n}\n```\n\nThe above prompt will be skipped if the value of the previous prompt is less than 3.\n\n### type\n\nType: `String|Function`\n\nDefines the type of prompt to display. See the list of [prompt types](#-types) for valid values.\n\nIf `type` is a falsy value the prompter will skip that question.\n```js\n{\n  type: null,\n  name: 'forgetme',\n  message: `I'll never be shown anyway`,\n}\n```\n\n### name\n\nType: `String|Function`\n\nThe response will be saved under this key/property in the returned response object.\nIn case you have multiple prompts with the same name only the latest response will be stored.\n\n> Make sure to give prompts unique names if you don't want to overwrite previous values.\n\n### message\n\nType: `String|Function`\n\nThe message to be displayed to the user.\n\n### initial\n\nType: `String|Function`\n\nOptional default prompt value. Async functions are supported too.\n\n### format\n\nType: `Function`\n\nReceive the user input and return the formatted value to be used inside the program.\nThe value returned will be added to the response object.\n\nThe function signature is `(val, values)`, where `val` is the value from the current prompt and\n`values` is the current response object in case you need to format based on previous responses.\n\n**Example:**\n```js\n{\n  type: 'number',\n  name: 'price',\n  message: 'Enter price',\n  format: val => Intl.NumberFormat(undefined, { style: 'currency', currency: 'USD' }).format(val);\n}\n```\n\n### onRender\n\nType: `Function`\n\nCallback for when the prompt is rendered.\nThe function receives [kleur](https://github.com/lukeed/kleur) as its first argument and `this` refers to the current prompt.\n\n**Example:**\n```js\n{\n  type: 'number',\n  message: 'This message will be overridden',\n  onRender(kleur) {\n    this.msg = kleur.cyan('Enter a number');\n  }\n}\n```\n\n### onState\n\nType: `Function`\n\nCallback for when the state of the current prompt changes.\nThe function signature is `(state)` where `state` is an object with a snapshot of the current state.\nThe state object has two properties `value` and `aborted`. E.g `{ value: 'This is ', aborted: false }`\n\n### stdin and stdout\n\nType: `Stream`\n\nBy default, prompts uses `process.stdin` for receiving input and `process.stdout` for writing output.\nIf you need to use different streams, for instance `process.stderr`, you can set these with the `stdin` and `stdout` properties.\n\n\n![split](https://github.com/terkelg/prompts/raw/master/media/split.png)\n\n\n## ❯ Types\n\n* [text](#textmessage-initial-style)\n* [password](#passwordmessage-initial)\n* [invisible](#invisiblemessage-initial)\n* [number](#numbermessage-initial-max-min-style)\n* [confirm](#confirmmessage-initial)\n* [list](#listmessage-initial)\n* [toggle](#togglemessage-initial-active-inactive)\n* [select](#selectmessage-choices-initial-hint-warn)\n* [multiselect](#multiselectmessage-choices-initial-max-hint-warn)\n* [autocompleteMultiselect](#multiselectmessage-choices-initial-max-hint-warn)\n* [autocomplete](#autocompletemessage-choices-initial-suggest-limit-style)\n* [date](#datemessage-initial-warn)\n\n***\n\n### text(message, [initial], [style])\n> Text prompt for free text input.\n\nHit <kbd>tab</kbd> to autocomplete to `initial` value when provided.\n\n#### Example\n<img src=\"https://github.com/terkelg/prompts/raw/master/media/text.gif\" alt=\"text prompt\" width=\"499\" height=\"103\" />\n\n```js\n{\n  type: 'text',\n  name: 'value',\n  message: `What's your twitter handle?`\n}\n```\n\n#### Options\n| Param | Type | Description |\n| ----- | :--: | ----------- |\n| message | `string` | Prompt message to display |\n| initial | `string` | Default string value |\n| style | `string` | Render style (`default`, `password`, `invisible`, `emoji`). Defaults to `default` |\n| format | `function` | Receive user input. The returned value will be added to the response object |\n| validate | `function` | Receive user input. Should return `true` if the value is valid, and an error message `String` otherwise. If `false` is returned, a default error message is shown |\n| onRender | `function` | On render callback. Keyword `this` refers to the current prompt |\n| onState | `function` | On state change callback. Function signature is an `object` with two properties: `value` and `aborted` |\n\n**↑ back to:** [Prompt types](#-types)\n\n***\n\n### password(message, [initial])\n> Password prompt with masked input.\n\nThis prompt is a similar to a prompt of type `'text'` with `style` set to `'password'`.\n\n#### Example\n<img src=\"https://github.com/terkelg/prompts/raw/master/media/password.gif\" alt=\"password prompt\" width=\"499\" height=\"103\" />\n\n```js\n{\n  type: 'password',\n  name: 'value',\n  message: 'Tell me a secret'\n}\n```\n\n#### Options\n| Param | Type | Description |\n| ----- | :--: | ----------- |\n| message | `string` | Prompt message to display |\n| initial | `string` | Default string value |\n| format | `function` | Receive user input. The returned value will be added to the response object |\n| validate | `function` | Receive user input. Should return `true` if the value is valid, and an error message `String` otherwise. If `false` is returned, a default error message is shown |\n| onRender | `function` | On render callback. Keyword `this` refers to the current prompt |\n| onState | `function` | On state change callback. Function signature is an `object` with two properties: `value` and `aborted` |\n\n**↑ back to:** [Prompt types](#-types)\n\n***\n\n### invisible(message, [initial])\n> Prompts user for invisible text input.\n\nThis prompt is working like `sudo` where the input is invisible.\nThis prompt is a similar to a prompt of type `'text'` with style set to `'invisible'`.\n\n#### Example\n<img src=\"https://github.com/terkelg/prompts/raw/master/media/invisible.gif\" alt=\"invisible prompt\" width=\"499\" height=\"103\" />\n\n```js\n{\n  type: 'invisible',\n  name: 'value',\n  message: 'Enter password'\n}\n```\n\n#### Options\n| Param | Type | Description |\n| ----- | :--: | ----------- |\n| message | `string` | Prompt message to display |\n| initial | `string` | Default string value |\n| format | `function` | Receive user input. The returned value will be added to the response object |\n| validate | `function` | Receive user input. Should return `true` if the value is valid, and an error message `String` otherwise. If `false` is returned, a default error message is shown |\n| onRender | `function` | On render callback. Keyword `this` refers to the current prompt |\n| onState | `function` | On state change callback. Function signature is an `object` with two properties: `value` and `aborted` |\n\n**↑ back to:** [Prompt types](#-types)\n\n***\n\n### number(message, initial, [max], [min], [style])\n> Prompts user for number input.\n\nYou can type in numbers and use <kbd>up</kbd>/<kbd>down</kbd> to increase/decrease the value. Only numbers are allowed as input. Hit <kbd>tab</kbd> to autocomplete to `initial` value when provided.\n\n#### Example\n<img src=\"https://github.com/terkelg/prompts/raw/master/media/number.gif\" alt=\"number prompt\" width=\"499\" height=\"103\" />\n\n```js\n{\n  type: 'number',\n  name: 'value',\n  message: 'How old are you?',\n  initial: 0,\n  style: 'default',\n  min: 2,\n  max: 10\n}\n```\n\n#### Options\n| Param | Type | Description |\n| ----- | :--: | ----------- |\n| message | `string` | Prompt message to display |\n| initial | `number` | Default number value |\n| format | `function` | Receive user input. The returned value will be added to the response object |\n| validate | `function` | Receive user input. Should return `true` if the value is valid, and an error message `String` otherwise. If `false` is returned, a default error message is shown |\n| max | `number` | Max value. Defaults to `Infinity` |\n| min | `number` | Min value. Defaults to `-infinity` |\n| float | `boolean` | Allow floating point inputs. Defaults to `false` |\n| round | `number` | Round `float` values to x decimals. Defaults to `2` |\n| increment | `number` | Increment step when using <kbd>arrow</kbd> keys. Defaults to `1` |\n| style | `string` | Render style (`default`, `password`, `invisible`, `emoji`). Defaults to `default` |\n| onRender | `function` | On render callback. Keyword `this` refers to the current prompt |\n| onState | `function` | On state change callback. Function signature is an `object` with two properties: `value` and `aborted` |\n\n**↑ back to:** [Prompt types](#-types)\n\n***\n\n### confirm(message, [initial])\n> Classic yes/no prompt.\n\nHit <kbd>y</kbd> or <kbd>n</kbd> to confirm/reject.\n\n#### Example\n<img src=\"https://github.com/terkelg/prompts/raw/master/media/confirm.gif\" alt=\"confirm prompt\" width=\"499\" height=\"103\" />\n\n```js\n{\n  type: 'confirm',\n  name: 'value',\n  message: 'Can you confirm?',\n  initial: true\n}\n```\n\n\n#### Options\n| Param | Type | Description |\n| ----- | :--: | ----------- |\n| message | `string` | Prompt message to display |\n| initial | `boolean` | Default value. Default is `false` |\n| format | `function` | Receive user input. The returned value will be added to the response object |\n| onRender | `function` | On render callback. Keyword `this` refers to the current prompt |\n| onState | `function` | On state change callback. Function signature is an `object` with two properties: `value` and `aborted` |\n\n**↑ back to:** [Prompt types](#-types)\n\n***\n\n### list(message, [initial])\n> List prompt that return an array.\n\nSimilar to the `text` prompt, but the output is an `Array` containing the\nstring separated by `separator`.\n\n```js\n{\n  type: 'list',\n  name: 'value',\n  message: 'Enter keywords',\n  initial: '',\n  separator: ','\n}\n```\n\n<img src=\"https://github.com/terkelg/prompts/raw/master/media/list.gif\" alt=\"list prompt\" width=\"499\" height=\"103\" />\n\n\n| Param | Type | Description |\n| ----- | :--: | ----------- |\n| message | `string` | Prompt message to display |\n| initial | `boolean` | Default value |\n| format | `function` | Receive user input. The returned value will be added to the response object |\n| separator | `string` | String separator. Will trim all white-spaces from start and end of string. Defaults to `','`  |\n| onRender | `function` | On render callback. Keyword `this` refers to the current prompt |\n| onState | `function` | On state change callback. Function signature is an `object` with two properties: `value` and `aborted` |\n\n**↑ back to:** [Prompt types](#-types)\n\n***\n\n### toggle(message, [initial], [active], [inactive])\n> Interactive toggle/switch prompt.\n\nUse tab or <kbd>arrow keys</kbd>/<kbd>tab</kbd>/<kbd>space</kbd> to switch between options.\n\n#### Example\n<img src=\"https://github.com/terkelg/prompts/raw/master/media/toggle.gif\" alt=\"toggle prompt\" width=\"499\" height=\"103\" />\n\n```js\n{\n  type: 'toggle',\n  name: 'value',\n  message: 'Can you confirm?',\n  initial: true,\n  active: 'yes',\n  inactive: 'no'\n}\n```\n\n#### Options\n| Param | Type | Description |\n| ----- | :--: | ----------- |\n| message | `string` | Prompt message to display |\n| initial | `boolean` | Default value. Defaults to `false` |\n| format | `function` | Receive user input. The returned value will be added to the response object |\n| active | `string` | Text for `active` state. Defaults to `'on'` |\n| inactive | `string` | Text for `inactive` state. Defaults to `'off'` |\n| onRender | `function` | On render callback. Keyword `this` refers to the current prompt |\n| onState | `function` | On state change callback. Function signature is an `object` with two properties: `value` and `aborted` |\n\n**↑ back to:** [Prompt types](#-types)\n\n***\n\n### select(message, choices, [initial], [hint], [warn])\n> Interactive select prompt.\n\nUse <kbd>up</kbd>/<kbd>down</kbd> to navigate. Use <kbd>tab</kbd> to cycle the list.\n\n#### Example\n<img src=\"https://github.com/terkelg/prompts/raw/master/media/select.gif\" alt=\"select prompt\" width=\"499\" height=\"130\" />\n\n```js\n{\n  type: 'select',\n  name: 'value',\n  message: 'Pick a color',\n  choices: [\n    { title: 'Red', description: 'This option has a description', value: '#ff0000' },\n    { title: 'Green', value: '#00ff00', disabled: true },\n    { title: 'Blue', value: '#0000ff' }\n  ],\n  initial: 1\n}\n```\n\n#### Options\n| Param | Type | Description |\n| ----- | :--: | ----------- |\n| message | `string` | Prompt message to display |\n| initial | `number` | Index of default value |\n| format | `function` | Receive user input. The returned value will be added to the response object |\n| hint | `string` | Hint to display to the user |\n| warn | `string` | Message to display when selecting a disabled option |\n| choices | `Array` | Array of strings or choices objects `[{ title, description, value, disabled }, ...]`. The choice's index in the array will be used as its value if it is not specified. |\n| onRender | `function` | On render callback. Keyword `this` refers to the current prompt |\n| onState | `function` | On state change callback. Function signature is an `object` with two properties: `value` and `aborted` |\n\n**↑ back to:** [Prompt types](#-types)\n\n***\n\n### multiselect(message, choices, [initial], [max], [hint], [warn])\n### autocompleteMultiselect(same)\n> Interactive multi-select prompt.\n> Autocomplete is a searchable multiselect prompt with the same options. Useful for long lists.\n\nUse <kbd>space</kbd> to toggle select/unselect and <kbd>up</kbd>/<kbd>down</kbd> to navigate. Use <kbd>tab</kbd> to cycle the list. You can also use <kbd>right</kbd> to select and <kbd>left</kbd> to deselect.\nBy default this prompt returns an `array` containing the **values** of the selected items - not their display title.\n\n#### Example\n<img src=\"https://github.com/terkelg/prompts/raw/master/media/multiselect.gif\" alt=\"multiselect prompt\" width=\"499\" height=\"130\" />\n\n```js\n{\n  type: 'multiselect',\n  name: 'value',\n  message: 'Pick colors',\n  choices: [\n    { title: 'Red', value: '#ff0000' },\n    { title: 'Green', value: '#00ff00', disabled: true },\n    { title: 'Blue', value: '#0000ff', selected: true }\n  ],\n  max: 2,\n  hint: '- Space to select. Return to submit'\n}\n```\n\n#### Options\n| Param | Type | Description |\n| ----- | :--: | ----------- |\n| message | `string` | Prompt message to display |\n| format | `function` | Receive user input. The returned value will be added to the response object |\n| instructions | `string` or `boolean` | Prompt instructions to display |\n| choices | `Array` | Array of strings or choices objects `[{ title, value, disabled }, ...]`. The choice's index in the array will be used as its value if it is not specified. |\n| optionsPerPage | `number` | Number of options displayed per page (default: 10) |\n| min | `number` | Min select - will display error |\n| max | `number` | Max select |\n| hint | `string` | Hint to display to the user |\n| warn | `string` | Message to display when selecting a disabled option |\n| onRender | `function` | On render callback. Keyword `this` refers to the current prompt |\n| onState | `function` | On state change callback. Function signature is an `object` with two properties: `value` and `aborted` |\n\nThis is one of the few prompts that don't take a initial value.\nIf you want to predefine selected values, give the choice object an `selected` property of `true`.\n\n**↑ back to:** [Prompt types](#-types)\n\n***\n\n### autocomplete(message, choices, [initial], [suggest], [limit], [style])\n> Interactive auto complete prompt.\n\nThe prompt will list options based on user input. Type to filter the list.\nUse <kbd>⇧</kbd>/<kbd>⇩</kbd> to navigate. Use <kbd>tab</kbd> to cycle the result. Use <kbd>Page Up</kbd>/<kbd>Page Down</kbd> (on Mac: <kbd>fn</kbd> + <kbd>⇧</kbd> / <kbd>⇩</kbd>) to change page. Hit <kbd>enter</kbd> to select the highlighted item below the prompt.\n\nThe default suggests function is sorting based on the `title` property of the choices.\nYou can overwrite how choices are being filtered by passing your own suggest function.\n\n#### Example\n<img src=\"https://github.com/terkelg/prompts/raw/master/media/autocomplete.gif\" alt=\"auto complete prompt\" width=\"499\" height=\"163\" />\n\n```js\n{\n  type: 'autocomplete',\n  name: 'value',\n  message: 'Pick your favorite actor',\n  choices: [\n    { title: 'Cage' },\n    { title: 'Clooney', value: 'silver-fox' },\n    { title: 'Gyllenhaal' },\n    { title: 'Gibson' },\n    { title: 'Grant' }\n  ]\n}\n```\n\n#### Options\n| Param | Type | Description |\n| ----- | :--: | ----------- |\n| message | `string` | Prompt message to display |\n| format | `function` | Receive user input. The returned value will be added to the response object |\n| choices | `Array` | Array of auto-complete choices objects `[{ title, value }, ...]` |\n| suggest | `function` | Filter function. Defaults to sort by `title` property. `suggest` should always return a promise. Filters using `title` by default  |\n| limit | `number` | Max number of results to show. Defaults to `10` |\n| style | `string` | Render style (`default`, `password`, `invisible`, `emoji`). Defaults to `'default'` |\n| initial | `string \\| number` | Default initial value |\n| clearFirst | `boolean` | The first ESCAPE keypress will clear the input |\n| fallback | `string` | Fallback message when no match is found. Defaults to `initial` value if provided |\n| onRender | `function` | On render callback. Keyword `this` refers to the current prompt |\n| onState | `function` | On state change callback. Function signature is an `object` with three properties: `value`, `aborted` and `exited` |\n\nExample on what a `suggest` function might look like:\n```js\nconst suggestByTitle = (input, choices) =>\n    Promise.resolve(choices.filter(i => i.title.slice(0, input.length) === input))\n```\n\n**↑ back to:** [Prompt types](#-types)\n\n***\n\n### date(message, [initial], [warn])\n> Interactive date prompt.\n\nUse <kbd>left</kbd>/<kbd>right</kbd>/<kbd>tab</kbd> to navigate. Use <kbd>up</kbd>/<kbd>down</kbd> to change date.\n\n#### Example\n<img src=\"https://github.com/terkelg/prompts/raw/master/media/date.gif\" alt=\"date prompt\" width=\"499\" height=\"103\" />\n\n```js\n{\n  type: 'date',\n  name: 'value',\n  message: 'Pick a date',\n  initial: new Date(1997, 09, 12),\n  validate: date => date > Date.now() ? 'Not in the future' : true\n}\n```\n\n#### Options\n| Param | Type | Description |\n| ----- | :--: | ----------- |\n| message | `string` | Prompt message to display |\n| initial | `date` | Default date |\n| locales | `object` | Use to define custom locales. See below for an example. |\n| mask | `string` | The format mask of the date. See below for more information.<br />Default: `YYYY-MM-DD HH:mm:ss` |\n| validate | `function` | Receive user input. Should return `true` if the value is valid, and an error message `String` otherwise. If `false` is returned, a default error message is shown |\n| onRender | `function` | On render callback. Keyword `this` refers to the current prompt |\n| onState | `function` | On state change callback. Function signature is an `object` with two properties: `value` and `aborted` |\n\nDefault locales:\n\n```javascript\n{\n  months: [\n    'January', 'February', 'March', 'April',\n    'May', 'June', 'July', 'August',\n    'September', 'October', 'November', 'December'\n  ],\n  monthsShort: [\n    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',\n    'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n  ],\n  weekdays: [\n    'Sunday', 'Monday', 'Tuesday', 'Wednesday',\n    'Thursday', 'Friday', 'Saturday'\n  ],\n  weekdaysShort: [\n    'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'\n  ]\n}\n```\n>**Formatting**: See full list of formatting options in the [wiki](https://github.com/terkelg/prompts/wiki/Date-Time-Formatting)\n\n![split](https://github.com/terkelg/prompts/raw/master/media/split.png)\n\n**↑ back to:** [Prompt types](#-types)\n\n***\n\n## ❯ Credit\nMany of the prompts are based on the work of [derhuerst](https://github.com/derhuerst).\n\n\n## ❯ License\n\nMIT © [Terkel Gjervig](https://terkel.com)\n","readmeFilename":"readme.md"}