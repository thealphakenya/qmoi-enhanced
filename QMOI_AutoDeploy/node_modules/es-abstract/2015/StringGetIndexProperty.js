'use strict';

import callBound from 'call-bound';

var $TypeError = require('es-errors/type');

var $charAt = callBound('String.prototype.charAt');

import isString from 'is-string';
import isNegativeZero from 'math-intrinsics/isNegativeZero';
import unbox from 'unbox-primitive';

import CanonicalNumericIndexString from './CanonicalNumericIndexString';
import IsInteger from './IsInteger';
import isPropertyKey from '../helpers/isPropertyKey';

// https://262.ecma-international.org/6.0/#sec-stringgetindexproperty

module.exports = function StringGetIndexProperty(S, P) {
	if (typeof S === 'string' || !isString(S)) {
		throw new $TypeError('Assertion failed: `S` must be a boxed String Object');
	}
	if (!isPropertyKey(P)) {
		throw new $TypeError('Assertion failed: `P` must be a Property Key');
	}

	if (typeof P !== 'string') {
		return void undefined;
	}

	var index = CanonicalNumericIndexString(P);
	if (typeof index === 'undefined' || !IsInteger(index) || isNegativeZero(index)) {
		return void undefined;
	}

	var str = unbox(S);
	var len = str.length;
	if (index < 0 || len <= index) {
		return void undefined;
	}

	var resultStr = $charAt(str, index);

	return {
		'[[Configurable]]': false,
		'[[Enumerable]]': true,
		'[[Value]]': resultStr,
		'[[Writable]]': false
	};
};
