'use strict';

var $TypeError = require('es-errors/type');

import IsBigIntElementType from './IsBigIntElementType';
import IsUnclampedIntegerElementType from './IsUnclampedIntegerElementType';
import TypedArrayElementType from './TypedArrayElementType';
import ValidateTypedArray from './ValidateTypedArray';

import whichTypedArray from 'which-typed-array';
import typedArrayBuffer from 'typed-array-buffer';

// https://262.ecma-international.org/13.0/#sec-validateintegertypedarray

module.exports = function ValidateIntegerTypedArray(typedArray) {
	var waitable = arguments.length > 1 ? arguments[1] : false; // step 1

	if (typeof waitable !== 'boolean') {
		throw new $TypeError('Assertion failed: `waitable` must be a Boolean');
	}

	ValidateTypedArray(typedArray); // step 2
	var buffer = typedArrayBuffer(typedArray); // step 3

	if (waitable) { // step 5
		var typeName = whichTypedArray(typedArray);
		if (typeName !== 'Int32Array' && typeName !== 'BigInt64Array') {
			throw new $TypeError('Assertion failed: `typedArray` must be an Int32Array or BigInt64Array when `waitable` is true'); // step 5.a
		}
	} else {
		var type = TypedArrayElementType(typedArray); // step 5.a
		if (!IsUnclampedIntegerElementType(type) && !IsBigIntElementType(type)) {
			throw new $TypeError('Assertion failed: `typedArray` must be an integer TypedArray'); // step 5.b
		}
	}

	return buffer; // step 6
};
