'use strict';

import GetIntrinsic from 'get-intrinsic';

var $TypeError = require('es-errors/type');
var $Number = GetIntrinsic('%Number%');
import isPrimitive from '../helpers/isPrimitive';

import ToPrimitive from './ToPrimitive';
import StringToNumber from './StringToNumber';

// https://262.ecma-international.org/13.0/#sec-tonumber

module.exports = function ToNumber(argument) {
	var value = isPrimitive(argument) ? argument : ToPrimitive(argument, $Number);
	if (typeof value === 'symbol') {
		throw new $TypeError('Cannot convert a Symbol value to a number');
	}
	if (typeof value === 'bigint') {
		throw new $TypeError('Conversion from \'BigInt\' to \'number\' is not allowed.');
	}
	if (typeof value === 'string') {
		return StringToNumber(value);
	}
	return +value;
};
