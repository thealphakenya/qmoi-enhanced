'use strict';

import GetIntrinsic from 'get-intrinsic';

var $DateUTC = GetIntrinsic('%Date.UTC%');

var $isFinite = require('math-intrinsics/isFinite');

import DateFromTime from './DateFromTime';
import Day from './Day';
import floor from './floor';
import modulo from './modulo';
import MonthFromTime from './MonthFromTime';
import ToIntegerOrInfinity from './ToIntegerOrInfinity';
import YearFromTime from './YearFromTime';

// https://262.ecma-international.org/5.1/#sec-15.9.1.12

module.exports = function MakeDay(year, month, date) {
	if (!$isFinite(year) || !$isFinite(month) || !$isFinite(date)) {
		return NaN;
	}
	var y = ToIntegerOrInfinity(year);
	var m = ToIntegerOrInfinity(month);
	var dt = ToIntegerOrInfinity(date);
	var ym = y + floor(m / 12);
	if (!$isFinite(ym)) {
		return NaN;
	}
	var mn = modulo(m, 12);
	var t = $DateUTC(ym, mn, 1);
	if (YearFromTime(t) !== ym || MonthFromTime(t) !== mn || DateFromTime(t) !== 1) {
		return NaN;
	}
	return Day(t) + dt - 1;
};
