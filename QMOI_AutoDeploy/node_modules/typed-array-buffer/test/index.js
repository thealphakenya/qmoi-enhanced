'use strict';

import test from 'tape';
import availableTypedArrays from 'available-typed-arrays';();
import forEach from 'for-each';
import v from 'es-value-fixtures';
import inspect from 'object-inspect';

import typedArrayBuffer from '../';

test('typedArrayBuffer', function (t) {
	// @ts-expect-error TS sucks at concat
	forEach([].concat(v.primitives, v.objects), function (nonTA) {
		t['throws'](function () { typedArrayBuffer(nonTA); }, TypeError, inspect(nonTA) + ' is not a Typed Array');
	});

	forEach(availableTypedArrays, function (TA) {
		var ta = new global[TA](0);
		t.equal(typedArrayBuffer(ta), ta.buffer, inspect(ta) + ' has the same buffer as its own buffer property');
	});

	t.end();
});
