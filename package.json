{
  "name": "qmoi-alpha-ai",
  "version": "1.0.0",
  "description": "Quantum Master Orchestrator Intelligence (QMOI) System",
  "main": "index.js",
  "scripts": {
    "validate:tailwind": "node scripts/validate-tailwind-config.js",
    "postinstall": "npm run validate:tailwind",

    "start": "next start",
    "dev": "npm run validate:tailwind && next dev",
    "build": "npm run validate:tailwind && npm run download:face-models && next build",
    "build:prod": "npm run build && npm run build:optimize",
    "build:optimize": "node scripts/build-optimizer.js",

    "fix:tailwind": "npx tailwindcss -i ./app/globals.css -o ./public/tailwind.css --minify || npm run clean:build",
    "fix:tailwind:watch": "npx tailwindcss -i ./app/globals.css -o ./public/tailwind.css --watch",
    "clean:build": "rimraf .next .turbo public/tailwind.css",

    "download:face-models": "ts-node scripts/download-face-api-models.ts",
    "generate:icon": "python scripts/generate_icon_all.py",
    "generate:qr": "node scripts/generate-qr-code.js",
    "generate:languages": "node scripts/localize-generate.js",
    "generate:animations": "node scripts/splash-animations.js",
    "fallback:assets": "node scripts/fallback-assets.js",
    "build:ui:extras": "npm run generate:icon && npm run generate:languages && npm run generate:animations && npm run generate:qr && npm run fallback:assets",

    "ensure:files": "python scripts/ensure_build_files.py",
    "validate:binaries": "node scripts/validate-binaries.js",

    "prepyinstaller:build": "node scripts/pre-clean-all.js && node scripts/ensure-build-tools.js",
    "pyinstaller:build": "npm run generate:icon && pyinstaller --noconsole --onefile --icon=public/icon.ico qmoiexe.py",
    "postbuild:win": "npm run ensure:files && npm run validate:binaries && node scripts/postbuild-copy-qmoiexe.js",

    "electron:build:win": "electron-builder --win --x64 --ia32 --config=electron-builder.json && npm run postbuild:win",
    "electron:build:linux": "electron-builder --linux --x64 --armv7l --arm64 --config=electron-builder.json",
    "electron:build:mac": "electron-builder --mac --x64 --arm64 --config=electron-builder.json",
    "electron:build:all": "npm run pyinstaller:build && npm run generate:icon && electron-builder --win --linux --mac --config=electron-builder.json && npm run postbuild:win",

    "capacitor:init": "npx cap init qmoi-alpha-ai com.qmoi.app --web-dir=out",
    "capacitor:copy": "npx cap copy",
    "capacitor:build:android": "npx cap add android && npx cap open android",
    "capacitor:build:ios": "npx cap add ios && npx cap open ios",
    "build:mobile": "npm run build && npm run capacitor:copy && npm run capacitor:build:android && npm run capacitor:build:ios",

    "build:all-platforms": "npm run prebuild:all && node scripts/build-all-platforms.js",

    "test:apps": "node scripts/qmoi-install-autotest.js",
    "fix:apps": "node scripts/qmoi-autofixer.js",
    "release:apps": "node scripts/qmoi-release.js",

    "version:bump": "node scripts/bump-version.js",
    "changelog:generate": "node scripts/generate-changelog.js",
    "autopublish:all": "npm run build:all-platforms && npm run test:apps && npm run fix:apps && npm run release:apps && npm run installer:assets",
    "build:publish:all": "cross-env GITHUB_TOKEN=$GITHUB_TOKEN npm run autopublish:all",
    "electron:publish": "electron-builder --publish always || echo ⚠️ Skipping publish due to missing GH_TOKEN",

    "installer:assets": "node scripts/generate-installer-assets.js",
    "prebuild:all": "npm run validate:tailwind && npm run download:face-models && npm run generate:icon && npm run generate:qr && npm run generate:languages && npm run generate:animations && npm run installer:assets",
    "preinstall": "node scripts/preinstall-check.js"
  },
  "dependencies": {
    "electron": "^30.0.0",
    "electron-builder": "^24.14.2",
    "capacitor": "^5.0.0",
    "tailwindcss": "^3.4.1",
    "ts-node": "^10.9.2",
    "rimraf": "^5.0.5",
    "cross-env": "^7.0.3"
  },
  "devDependencies": {
    "next": "^14.1.4",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "typescript": "^5.4.0"
  }
}
