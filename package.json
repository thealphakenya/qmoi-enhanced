{
  "name": "q-city",
  "version": "1.0.0",
  "description": "AI-Powered Virtual Supercomputer",
  "main": "src/main.js",
  "scripts": {
    "dev": "concurrently \"pnpm:dev:react\" \"pnpm:dev:electron\"",
    "dev:react": "react-scripts start",
    "dev:electron": "wait-on http://localhost:3000 && electron .",
    "build": "react-scripts build",
    "vercel-build": "react-scripts build",
    "postbuild": "echo 'Postbuild: static assets ready.'",
    "vercel:deploy": "npx vercel --prod --yes",
    "deploy:health": "node scripts/deploy/health-check.js check",
    "deploy:fix": "node scripts/deploy/health-check.js fix",
    "deploy:vercel": "node scripts/deploy/vercel_auto_deploy.js",
    "deploy:monitor": "node scripts/deploy/health-check.js check && node scripts/deploy/vercel_auto_deploy.js",
    "build:electron": "tsc && electron-builder",
    "start": "react-scripts start",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "lint:auto": "node scripts/auto-lint.js",
    "lint:watch": "node scripts/lint-watcher.js",
    "lint:report": "node scripts/lint-reporter.js",
    "lint:smart": "node scripts/smart-lint.js",
    "lint:notify": "node scripts/lint-notifier.js",
    "lint:full": "yarn lint:auto && yarn lint:notify",
    "lint:demo": "node scripts/demo-automation.js",
    "lint:ai": "node scripts/ai-lint-engine.js",
    "lint:qmoi": "python scripts/qmoi-lint-integration.py",
    "qmoi:start": "python scripts/qmoi-system-controller.py --start",
    "qmoi:status": "python scripts/qmoi-system-controller.py --status",
    "qmoi:controller": "node scripts/qmoi-controller.js",
    "qmoi:earning:daemon": "python scripts/qmoi_earning_daemon.py",
    "lint:super": "yarn lint:ai && yarn lint:qmoi && yarn qmoi:controller",
    "test": "react-scripts test --passWithNoTests --watchAll=false",
    "eject": "react-scripts eject",
    "trading:publicip": "python scripts/get_public_ip.py",
    "trading:genkey": "python scripts/generate_rsa_key.py",
    "trading:auto": "node scripts/auto_trading.js",
    "install:qai": "node scripts/installer.js",
    "validate-notification-config": "node scripts/validate_notification_config.js",
    "qmoi:docs:verify": "node scripts/qmoi_doc_verifier.js verify",
    "qmoi:docs:create": "node scripts/qmoi_doc_verifier.js create",
    "qmoi:docs:test": "node scripts/qmoi_doc_verifier.js test",
    "qmoi:docs:simulate": "node scripts/qmoi_doc_verifier.js simulate",
    "qmoi:test:all": "node scripts/qmoi_self_test_runner.js all",
    "qmoi:test:list": "node scripts/qmoi_self_test_runner.js list",
    "qmoi:test:run": "node scripts/qmoi_self_test_runner.js test",
    "qmoi:fix:comprehensive": "node scripts/enhanced-error-fix.js --type=comprehensive",
    "qmoi:fix:build": "node scripts/enhanced-error-fix.js --type=build",
    "qmoi:fix:vercel": "node scripts/enhanced-error-fix.js --type=vercel",
    "qmoi:fix:test": "node scripts/enhanced-error-fix.js --type=test",
    "qmoi:fix:lint": "node scripts/enhanced-error-fix.js --type=lint",
    "qmoi:fix:license": "node scripts/enhanced-error-fix.js --type=license",
    "qmoi:autodev:full": "npm run qmoi:docs:verify && npm run qmoi:test:all && npm run qmoi:fix:comprehensive && npm run deploy:health",
    "qmoi:autodev:docs": "npm run qmoi:docs:verify && npm run qmoi:docs:create",
    "qmoi:autodev:test": "npm run qmoi:test:all && npm run qmoi:fix:comprehensive",
    "qmoi:autodev:deploy": "npm run qmoi:autoconfig && npm run qmoi:fix:comprehensive && npm run deploy:monitor",
    "qmoi:autogit:run": "node scripts/qmoi_enhanced_autogit.js run",
    "qmoi:autogit:fix": "node scripts/qmoi_enhanced_autogit.js fix",
    "qmoi:autogit:clean": "node scripts/qmoi_enhanced_autogit.js clean",
    "qmoi:autogit:status": "node scripts/qmoi_enhanced_autogit.js status",
    "qmoi:autogit:pre-commit": "node scripts/qmoi_enhanced_autogit.js pre-commit",
    "qmoi:autogit:post-commit": "node scripts/qmoi_enhanced_autogit.js post-commit",
    "qmoi:master:start": "node scripts/qmoi_master_orchestrator.js start",
    "qmoi:master:stop": "node scripts/qmoi_master_orchestrator.js stop",
    "qmoi:master:status": "node scripts/qmoi_master_orchestrator.js status",
    "qmoi:master:health": "node scripts/qmoi_master_orchestrator.js health",
    "qmoi:master:fix": "node scripts/qmoi_master_orchestrator.js fix",
    "qmoi:master:pre-commit": "node scripts/qmoi_master_orchestrator.js pre-commit",
    "qmoi:master:post-commit": "node scripts/qmoi_master_orchestrator.js post-commit",
    "qmoi:orchestrate": "npm run qmoi:master:start",
    "qmoi:comprehensive": "npm run qmoi:master:start && npm run qmoi:autogit:run && npm run qmoi:docs:verify && npm run qmoi:test:all",
    "qmoi:verify:all": "npm run qmoi:docs:verify && npm run qmoi:test:all && npm run qmoi:master:health",
    "qmoi:fix:all": "npm run qmoi:fix:comprehensive && npm run qmoi:autogit:fix && npm run qmoi:master:fix",
    "qmoi:deploy:full": "npm run qmoi:comprehensive && npm run deploy:monitor",
    "type-check": "tsc --noEmit --skipLibCheck",
    "type-check:strict": "tsc --noEmit --strict --skipLibCheck",
    "revenue:start": "node scripts/start-revenue-engine.js",
    "revenue:stop": "node -e \"require('./lib/qmoi-revenue-engine').qmoiRevenueEngine.stopRevenueEngine().then(console.log)\"",
    "revenue:status": "node -e \"console.log(JSON.stringify(require('./lib/qmoi-revenue-engine').qmoiRevenueEngine.getTotalEarnings(), null, 2))\"",
    "revenue:config": "node scripts/start-revenue-engine.js --config",
    "revenue:validate": "node scripts/start-revenue-engine.js --validate",
    "revenue:test": "node scripts/start-revenue-engine.js --test",
    "revenue:monitor": "node scripts/start-revenue-engine.js --monitor",
    "qmoi:autoconfig": "node -e \"import('./lib/qmoi-auto-config.js').then(m => m.qmoiAutoConfig.autoConfigureMpesa()).then(console.log)\"",
    "qmoi:validate": "node -e \"require('./lib/qmoi-auto-config').qmoiAutoConfig.validateConfiguration().then(console.log)\"",
    "qmoi:test:mpesa": "node -e \"require('./lib/qmoi-auto-config').qmoiAutoConfig.testMpesaConnectivity().then(console.log)\"",
    "qmoi:test:airtel": "node -e \"require('./lib/qmoi-auto-config').qmoiAutoConfig.testAirtelConnectivity().then(console.log)\"",
    "qmoi:master:login": "node -e \"console.log('Use the master dashboard or API endpoints for master login')\"",
    "qmoi:master:verify": "node -e \"console.log('Master verification requires API key authentication')\"",
    "qmoi:backup:credentials": "node -e \"console.log('Backup credentials to secure location')\"",
    "qmoi:rotate:keys": "node -e \"console.log('Key rotation requires manual intervention')\"",
    "qcity:install": "node scripts/qcity-device-manager.js npm-install",
    "qcity:npm-install": "node scripts/qcity-device-manager.js npm-install",
    "qcity:build": "node scripts/qcity-device-manager.js build",
    "qcity:test": "node scripts/qcity-device-manager.js test",
    "qcity:lint": "node scripts/qcity-device-manager.js lint",
    "qcity:deploy": "node scripts/qcity-device-manager.js deploy",
    "qcity:status": "node scripts/qcity-device-manager.js status",
    "qcity:monitor": "node scripts/qcity-device-manager.js monitor",
    "qcity:fix": "node scripts/qcity-device-manager.js auto-fix",
    "qcity:upgrade": "node scripts/qcity-device-manager.js upgrade",
    "qcity:optimize": "node scripts/qcity-device-manager.js optimize",
    "qcity:cluster": "node scripts/qcity-device-manager.js cluster",
    "qcity:security-audit": "node scripts/qcity-device-manager.js security-audit",
    "qcity:tune": "node scripts/qcity-device-manager.js tune",
    "qcity:ai-optimize": "node scripts/qcity-device-manager.js optimize",
    "qcity:multi-device": "node scripts/qcity-device-manager.js cluster",
    "qcity:auto-fix": "node scripts/qcity-device-manager.js auto-fix",
    "qserver:start": "node scripts/qserver-manager.js start",
    "qserver:stop": "node scripts/qserver-manager.js stop",
    "qserver:restart": "node scripts/qserver-manager.js restart",
    "qserver:deploy": "node scripts/qserver-manager.js deploy",
    "qserver:scale": "node scripts/qserver-manager.js scale",
    "qserver:monitor": "node scripts/qserver-manager.js monitor",
    "qserver:optimize": "node scripts/qserver-manager.js optimize",
    "qserver:health-check": "node scripts/qserver-manager.js health-check",
    "qserver:backup": "node scripts/qserver-manager.js backup",
    "qserver:restore": "node scripts/qserver-manager.js restore",
    "qserver:security-audit": "node scripts/qserver-manager.js security-audit",
    "qserver:performance-tune": "node scripts/qserver-manager.js performance-tune",
    "qserver:status": "node scripts/qserver-manager.js status",
    "qserver:auto-fix": "node scripts/qserver-manager.js auto-fix",
    "qmoi:autostart": "node scripts/qmoi-master-autostart.js",
    "qmoi:emergency:fix": "node scripts/qmoi-emergency-fix.js",
    "qmoi:pre-commit": "node scripts/qmoi-pre-commit.js",
    "qmoi:post-commit": "node scripts/qmoi-post-commit.js",
    "qmoi:optimize:full": "node scripts/qmoi-optimize-full.js",
    "qmoi:comprehensive:audit": "node scripts/qmoi-comprehensive-audit.js",
    "qmoi:deploy:fix": "node scripts/qmoi-deploy-fix.js",
    "qmoi:start:all": "npm run qcity:start && npm run qserver:start && npm run qmoi:master:start",
    "qmoi:stop:all": "npm run qcity:stop && npm run qserver:stop && npm run qmoi:master:stop",
    "qmoi:status:all": "npm run qcity:status && npm run qserver:status && npm run qmoi:master:status",
    "qmoi:fix:all": "npm run qcity:fix && npm run qserver:auto-fix && npm run qmoi:emergency:fix",
    "qmoi:health:all": "npm run qcity:monitor && npm run qserver:health-check && npm run qmoi:master:health",
    "qmoi:deploy:complete": "npm run qmoi:autodev:full && npm run qmoi:deploy:full && npm run qmoi:health:all",
    "qmoi:automate:everything": "npm run qmoi:autostart && npm run qmoi:deploy:complete && npm run qmoi:health:all"
  },
  "dependencies": {
    "@emotion/react": "^11.11.3",
    "@emotion/styled": "^11.11.0",
    "@mui/icons-material": "^5.15.10",
    "@mui/material": "^5.15.10",
    "@radix-ui/react-accordion": "^1.2.11",
    "@radix-ui/react-alert-dialog": "^1.1.14",
    "@radix-ui/react-aspect-ratio": "^1.1.7",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.2",
    "@radix-ui/react-collapsible": "^1.1.11",
    "@radix-ui/react-context-menu": "^2.2.15",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-dropdown-menu": "^2.1.15",
    "@radix-ui/react-form": "^0.1.7",
    "@radix-ui/react-hover-card": "^1.1.14",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-menubar": "^1.1.15",
    "@radix-ui/react-navigation-menu": "^1.2.13",
    "@radix-ui/react-popover": "^1.1.14",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-radio-group": "^1.3.7",
    "@radix-ui/react-scroll-area": "^1.2.9",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slider": "^1.3.5",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.5",
    "@radix-ui/react-tabs": "^1.1.12",
    "@radix-ui/react-toast": "^1.2.14",
    "@radix-ui/react-toggle": "^1.1.9",
    "@radix-ui/react-toggle-group": "^1.1.10",
    "@radix-ui/react-tooltip": "^1.2.7",
    "@types/better-sqlite3": "^7.6.13",
    "axios": "^1.6.0",
    "bcryptjs": "^2.4.3",
    "better-sqlite3": "^11.10.0",
    "chart.js": "^4.5.0",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "cmdk": "^1.1.1",
    "crypto-js": "^4.2.0",
    "dotenv": "^16.4.5",
    "electron": "^29.1.0",
    "embla-carousel-react": "^8.6.0",
    "express": "^4.18.3",
    "input-otp": "^1.4.2",
    "jsonwebtoken": "^9.0.2",
    "lucide-react": "^0.522.0",
    "next": "^15.3.4",
    "next-themes": "^0.4.6",
    "node-fetch": "^3.3.2",
    "nodemailer": "^7.0.3",
    "react": "^18.0.0",
    "react-chartjs-2": "^5.3.0",
    "react-day-picker": "^9.7.0",
    "react-dom": "^18.3.1",
    "react-hook-form": "^7.58.1",
    "react-icons": "^5.5.0",
    "react-query": "^3.39.3",
    "react-resizable-panels": "^3.0.3",
    "react-scripts": "^5.0.1",
    "recharts": "^3.0.0",
    "semgrep": "^0.0.1",
    "snyk": "^1.1297.3",
    "socket.io": "^4.7.4",
    "socket.io-client": "^4.7.4",
    "sonner": "^2.0.5",
    "sqlite": "^5.1.1",
    "sqlite3": "^5.1.7",
    "tailwind-merge": "^3.3.1",
    "typescript": "^4.9.5",
    "uuid": "^9.0.1",
    "vaul": "^1.1.2",
    "ws": "^8.16.0"
  },
  "devDependencies": {
    "@types/bcryptjs": "^2.4.6",
    "@types/crypto-js": "^4.2.2",
    "@types/electron": "^1.6.10",
    "@types/express": "^4.17.21",
    "@types/jsonwebtoken": "^9.0.6",
    "@types/next": "^8.0.7",
    "@types/node": "^20.19.1",
    "@types/node-fetch": "^2.6.11",
    "@types/react": "^18.2.61",
    "@types/react-dom": "^18.2.19",
    "@types/uuid": "^9.0.8",
    "@types/ws": "^8.5.10",
    "@typescript-eslint/eslint-plugin": "^7.1.0",
    "@typescript-eslint/parser": "^7.1.0",
    "concurrently": "^8.0.1",
    "electron-builder": "^24.13.1",
    "eslint": "^8.57.0",
    "eslint-plugin-react": "^7.33.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "jest": "^29.7.0",
    "license-checker": "^25.0.1",
    "wait-on": "^7.0.1"
  },
  "author": "Q-city Team",
  "license": "MIT",
  "type": "module",
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
