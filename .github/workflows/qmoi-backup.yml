name: QMOI System Backup

on:
  schedule:
    - cron: '0 */4 * * *'  # Every 4 hours
  workflow_dispatch:  # Manual trigger
  repository_dispatch:
    types: [qmoi-backup, qmoi-restore]

env:
  QMOI_VERSION: "2.0"
  PYTHON_VERSION: "3.9"

jobs:
  # Database Backup
  database-backup:
    name: Database Backup
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        pip install -r requirements/qmoi_enhanced_requirements.txt
    
    - name: Backup databases
      run: |
        python scripts/backup_databases.py
    
    - name: Upload database backups
      uses: actions/upload-artifact@v4
      with:
        name: database-backups-${{ github.run_id }}
        path: backups/databases/

  # Configuration Backup
  config-backup:
    name: Configuration Backup
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        pip install -r requirements/qmoi_enhanced_requirements.txt
    
    - name: Backup configurations
      run: |
        python scripts/backup_configurations.py
    
    - name: Upload config backups
      uses: actions/upload-artifact@v4
      with:
        name: config-backups-${{ github.run_id }}
        path: backups/configurations/

  # Model Backup
  model-backup:
    name: Model Backup
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        pip install -r requirements/qmoi_enhanced_requirements.txt
        pip install huggingface_hub
    
    - name: Backup models
      run: |
        python scripts/backup_models.py
    
    - name: Upload model backups
      uses: actions/upload-artifact@v4
      with:
        name: model-backups-${{ github.run_id }}
        path: backups/models/

  # Cloud Backup
  cloud-backup:
    name: Cloud Backup
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        pip install -r requirements/qmoi_enhanced_requirements.txt
        pip install boto3 google-cloud-storage azure-storage-blob
    
    - name: Backup to AWS S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        python scripts/backup_to_aws.py
    
    - name: Backup to Google Cloud Storage
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      run: |
        python scripts/backup_to_gcp.py
    
    - name: Backup to Azure Blob Storage
      env:
        AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
      run: |
        python scripts/backup_to_azure.py
    
    - name: Upload cloud backup report
      uses: actions/upload-artifact@v4
      with:
        name: cloud-backup-report-${{ github.run_id }}
        path: logs/cloud_backup_report.json

  # Code Backup
  code-backup:
    name: Code Backup
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        pip install -r requirements/qmoi_enhanced_requirements.txt
    
    - name: Backup code
      run: |
        python scripts/backup_code.py
    
    - name: Upload code backup
      uses: actions/upload-artifact@v4
      with:
        name: code-backup-${{ github.run_id }}
        path: backups/code/

  # Log Backup
  log-backup:
    name: Log Backup
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        pip install -r requirements/qmoi_enhanced_requirements.txt
    
    - name: Backup logs
      run: |
        python scripts/backup_logs.py
    
    - name: Upload log backup
      uses: actions/upload-artifact@v4
      with:
        name: log-backup-${{ github.run_id }}
        path: backups/logs/

  # Backup Verification
  backup-verification:
    name: Backup Verification
    runs-on: ubuntu-latest
    needs: [database-backup, config-backup, model-backup, cloud-backup, code-backup, log-backup]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        pip install -r requirements/qmoi_enhanced_requirements.txt
    
    - name: Verify backups
      run: |
        python scripts/verify_backups.py
    
    - name: Upload verification report
      uses: actions/upload-artifact@v4
      with:
        name: backup-verification-${{ github.run_id }}
        path: logs/backup_verification.json

  # Backup Cleanup
  backup-cleanup:
    name: Backup Cleanup
    runs-on: ubuntu-latest
    needs: backup-verification
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        pip install -r requirements/qmoi_enhanced_requirements.txt
    
    - name: Cleanup old backups
      run: |
        python scripts/cleanup_old_backups.py
    
    - name: Upload cleanup report
      uses: actions/upload-artifact@v4
      with:
        name: backup-cleanup-${{ github.run_id }}
        path: logs/backup_cleanup.json

  # Backup Report
  backup-report:
    name: Backup Report
    runs-on: ubuntu-latest
    needs: [backup-verification, backup-cleanup]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        pip install -r requirements/qmoi_enhanced_requirements.txt
    
    - name: Generate backup report
      run: |
        python scripts/generate_backup_report.py
    
    - name: Upload backup report
      uses: actions/upload-artifact@v4
      with:
        name: backup-report-${{ github.run_id }}
        path: reports/backup/

  # Backup Notification
  backup-notification:
    name: Backup Notification
    runs-on: ubuntu-latest
    needs: backup-report
    if: always()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        pip install -r requirements/qmoi_enhanced_requirements.txt
    
    - name: Send backup notifications
      run: |
        python scripts/send_backup_notifications.py
    
    - name: Update backup status
      run: |
        if [[ "${{ needs.backup-report.result }}" == "success" ]]; then
          echo "✅ QMOI backup completed successfully"
        else
          echo "⚠️ QMOI backup completed with issues"
          exit 1
        fi 