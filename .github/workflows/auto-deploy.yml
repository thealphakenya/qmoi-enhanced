name: Auto Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *' # Every day at 2am UTC

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Lint
        run: |
          npm run lint || echo "::warning::Lint failed, continuing..."

      - name: Test
        run: |
          npm test || echo "::warning::Tests failed, continuing..."

      - name: Security Audit (Critical Only)
        run: |
          npm audit --audit-level=critical || echo "::warning::Security audit failed, continuing..."

      - name: Install license-checker
        run: npm install license-checker --save-dev --legacy-peer-deps

      - name: License Compliance Check
        run: |
          npx license-checker --production --onlyAllow="MIT;Apache-2.0;BSD-2-Clause;BSD-3-Clause;CC0-1.0;ISC" || (
            echo "::error::❌ Non-compliant license found. Failing deployment." && exit 1
          )

      - name: Run AI-driven metrics check
        run: |
          if npm test && node scripts/ai_metrics_check.js; then
            echo "✅ AI: All checks passed. Proceeding to deploy."
          else
            echo "⚠️  AI: Checks failed. Skipping deployment."
            exit 0
          fi

      - name: Build
        run: |
          npm run build || echo "::warning::Build failed, continuing..."

      - name: Run Vercel Auto Deploy
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node scripts/deploy/vercel_auto_deploy.js || echo "::warning::Vercel auto-deploy failed. Fallback attempted."

      - name: AWS Cost Report
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          node scripts/aws_cost_report.js

      - name: Keep Alive (Optional)
        run: echo "✅ App should always be running. Monitor with external uptime service."

      - name: Install archiver for backup
        run: npm install archiver

      - name: Run Backup Automation
        run: node scripts/backup_automation.js

      - name: Generate License Report (Optional)
        if: always()
        run: |
          npx license-checker --production --json > license-report.json

      # Optional: Upload license report
      # - name: Upload license report
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: license-report
      #     path: license-report.json