# Production Nginx config for secure backend/app hosting
# Assumes your Next.js frontend is on port 3000 and SSH backend on 4000
# Also serves static downloads from /var/www/downloads

server {
    listen 80;
    server_name example.com;

    # Redirect all HTTP to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name example.com;

    ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;

    # üîê SSL & Security Headers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "no-referrer-when-downgrade";
    add_header Strict-Transport-Security "max-age=31536000" always;

    # üöÄ Gzip Compression
    gzip on;
    gzip_types text/plain application/javascript application/json text/css application/xml;
    gzip_min_length 256;

    # ‚öõÔ∏è Frontend (Next.js)
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # ‚öôÔ∏è Backend (API or SSH service)
    limit_req_zone $binary_remote_addr zone=api_rate_limit:10m rate=5r/s;
    location /ssh-backend/ {
        limit_req zone=api_rate_limit burst=10;
        proxy_pass http://localhost:4000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # üìÅ Static File Hosting (downloads)
    location /downloads/ {
        alias /var/www/downloads/;
        autoindex off;
        add_header Content-Disposition "attachment";
    }

    # üõ°Ô∏è Extra Security & Performance (Recommended)
    # Enable caching for static assets
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # Enable Brotli compression if available
    brotli on;
    brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    brotli_comp_level 6;

    # Hide nginx version
    server_tokens off;

    # Limit request body size (protects against large uploads)
    client_max_body_size 50M;

    # Optionally, add WebSocket support for real-time features
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # ‚ùå Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /404.html { root /var/www/html; }
    location = /50x.html { root /var/www/html; }
}
