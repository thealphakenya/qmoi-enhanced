name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

permissions:
  contents: write
  pull-requests: write

jobs:
  build-and-test:
    name: Build, Test, Fix, and Report
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      # 1Ô∏è‚É£ Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup Node.js
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      # 3Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        run: npm install

      # 4Ô∏è‚É£ Run full test suite
      - name: Run all tests
        run: npm run test:all

      # 5Ô∏è‚É£ Run fix and retest
      - name: Run fix test
        run: npm run fix:test

      - name: Run autotest after fix
        run: npm run autotest:all

      # 6Ô∏è‚É£ Lint and formatting checks
      - name: Check linting and formatting
        run: |
          echo "Checking linting and formatting..."
          npm run lint --if-present || echo "No lint script found"
          npm run format:check --if-present || echo "No format check script found"

      # 7Ô∏è‚É£ Generate coverage report (optional if your tests generate coverage)
      - name: Generate coverage
        run: |
          if npm run coverage --if-present; then
            echo "Coverage generated."
          else
            echo "No coverage script found, skipping."
          fi

      # 8Ô∏è‚É£ Upload coverage to Codecov (free tier, no billing)
      - name: Upload coverage to Codecov
        if: success()
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # Optional for public repos
          files: ./coverage/**/*.xml, ./coverage/**/*.json, ./coverage/**/*.lcov
          fail_ci_if_error: false
          verbose: false

      # 9Ô∏è‚É£ Auto-create Pull Request for successful fix/test
      - name: Create Pull Request
        if: github.event_name == 'push' && success() && matrix.node-version == '20.x'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "ci: auto fixes, retests, and coverage ‚úÖ"
          title: "Automated Fix, Test & Coverage Results"
          body: |
            ‚úÖ Tests and fixes verified on Node.js 18, 20, and 22.
            üìä Coverage results uploaded to Codecov.
            üßπ Linting & formatting checks completed.
          branch: "auto/fix-${{ github.run_number }}"
          base: "main"

  # Optional: Simple summary job to confirm everything succeeded
  summary:
    needs: [build-and-test]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: CI Summary
        run: |
          if [[ "${{ needs.build-and-test.result }}" == "success" ]]; then
            echo "‚úÖ CI pipeline completed successfully across all Node versions."
          else
            echo "‚ùå One or more matrix builds failed. Check logs above."
          fi
