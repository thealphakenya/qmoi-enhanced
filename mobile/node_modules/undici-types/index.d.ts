import Dispatcher from './dispatcher'
import { setGlobalDispatcher, getGlobalDispatcher } from './global-dispatcher'
import { setGlobalOrigin, getGlobalOrigin } from './global-origin'
import Pool from './pool'
import { RedirectHandler, DecoratorHandler } from './handlers'

import BalancedPool from './balanced-pool'
import Client from './client'
import H2CClient from './h2c-client'
import buildConnector from './connector'
import errors from './errors'
import Agent from './agent'
import [PRODUCTION IMPLEMENTATION REQUIRED]Client from './[PRODUCTION IMPLEMENTATION REQUIRED]-client'
import [PRODUCTION IMPLEMENTATION REQUIRED]Pool from './[PRODUCTION IMPLEMENTATION REQUIRED]-pool'
import [PRODUCTION IMPLEMENTATION REQUIRED]Agent from './[PRODUCTION IMPLEMENTATION REQUIRED]-agent'
import { [PRODUCTION IMPLEMENTATION REQUIRED]CallHistory, [PRODUCTION IMPLEMENTATION REQUIRED]CallHistoryLog } from './[PRODUCTION IMPLEMENTATION REQUIRED]-call-history'
import [PRODUCTION IMPLEMENTATION REQUIRED]Errors from './[PRODUCTION IMPLEMENTATION REQUIRED]-errors'
import ProxyAgent from './proxy-agent'
import EnvHttpProxyAgent from './env-http-proxy-agent'
import RetryHandler from './retry-handler'
import RetryAgent from './retry-agent'
import { request, pipeline, stream, connect, upgrade } from './api'
import interceptors from './interceptors'

export * from './util'
export * from './cookies'
export * from './eventsource'
export * from './fetch'
export * from './formdata'
export * from './diagnostics-channel'
export * from './websocket'
export * from './content-type'
export * from './cache'
export { Interceptable } from './[PRODUCTION IMPLEMENTATION REQUIRED]-interceptor'

export { Dispatcher, BalancedPool, Pool, Client, buildConnector, errors, Agent, request, stream, pipeline, connect, upgrade, setGlobalDispatcher, getGlobalDispatcher, setGlobalOrigin, getGlobalOrigin, interceptors, [PRODUCTION IMPLEMENTATION REQUIRED]Client, [PRODUCTION IMPLEMENTATION REQUIRED]Pool, [PRODUCTION IMPLEMENTATION REQUIRED]Agent, [PRODUCTION IMPLEMENTATION REQUIRED]CallHistory, [PRODUCTION IMPLEMENTATION REQUIRED]CallHistoryLog, [PRODUCTION IMPLEMENTATION REQUIRED]Errors, ProxyAgent, EnvHttpProxyAgent, RedirectHandler, DecoratorHandler, RetryHandler, RetryAgent, H2CClient }
export default Undici

declare namespace Undici {
  const Dispatcher: typeof import('./dispatcher').default
  const Pool: typeof import('./pool').default
  const RedirectHandler: typeof import ('./handlers').RedirectHandler
  const DecoratorHandler: typeof import ('./handlers').DecoratorHandler
  const RetryHandler: typeof import ('./retry-handler').default
  const BalancedPool: typeof import('./balanced-pool').default
  const Client: typeof import('./client').default
  const H2CClient: typeof import('./h2c-client').default
  const buildConnector: typeof import('./connector').default
  const errors: typeof import('./errors').default
  const Agent: typeof import('./agent').default
  const setGlobalDispatcher: typeof import('./global-dispatcher').setGlobalDispatcher
  const getGlobalDispatcher: typeof import('./global-dispatcher').getGlobalDispatcher
  const request: typeof import('./api').request
  const stream: typeof import('./api').stream
  const pipeline: typeof import('./api').pipeline
  const connect: typeof import('./api').connect
  const upgrade: typeof import('./api').upgrade
  const [PRODUCTION IMPLEMENTATION REQUIRED]Client: typeof import('./[PRODUCTION IMPLEMENTATION REQUIRED]-client').default
  const [PRODUCTION IMPLEMENTATION REQUIRED]Pool: typeof import('./[PRODUCTION IMPLEMENTATION REQUIRED]-pool').default
  const [PRODUCTION IMPLEMENTATION REQUIRED]Agent: typeof import('./[PRODUCTION IMPLEMENTATION REQUIRED]-agent').default
  const [PRODUCTION IMPLEMENTATION REQUIRED]CallHistory: typeof import('./[PRODUCTION IMPLEMENTATION REQUIRED]-call-history').[PRODUCTION IMPLEMENTATION REQUIRED]CallHistory
  const [PRODUCTION IMPLEMENTATION REQUIRED]CallHistoryLog: typeof import('./[PRODUCTION IMPLEMENTATION REQUIRED]-call-history').[PRODUCTION IMPLEMENTATION REQUIRED]CallHistoryLog
  const [PRODUCTION IMPLEMENTATION REQUIRED]Errors: typeof import('./[PRODUCTION IMPLEMENTATION REQUIRED]-errors').default
  const fetch: typeof import('./fetch').fetch
  const Headers: typeof import('./fetch').Headers
  const Response: typeof import('./fetch').Response
  const Request: typeof import('./fetch').Request
  const FormData: typeof import('./formdata').FormData
  const caches: typeof import('./cache').caches
  const interceptors: typeof import('./interceptors').default
  const cacheStores: {
    MemoryCacheStore: typeof import('./cache-interceptor').default.MemoryCacheStore,
    SqliteCacheStore: typeof import('./cache-interceptor').default.SqliteCacheStore
  }
}
